@using AppZim.TableSql
@using MB.Extensions
@using AppZim.Models
@{
    ViewBag.Title = "CourseStudent";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdminNew.cshtml";
    var aclog = AccountTable.getbyID(Session["UID"].ToString().ToInt(0));
    List<tbl_Courses> lccourse = CoursesTable.getall().Where(n => (n.Status == 1 || n.Status == 2) && n.CourseSelfStudy != true).OrderByDescending(n => n.OpeningDate).ToList();
    //string[] strText = new string[4] { "Trang đầu", "Trang cuối", "Trang sau", "Trang trước" };
    var languages = Language.GetAll();
    var tvvs = AccountTable.GetAcademics();
    if(aclog.RoleID == 6)
    {
        tvvs = tvvs.Where(x => x.ID == aclog.ID).ToList();
    }
    List<tbl_Account> teachers = AccountTable.getbyrole(4);
}
@section myStyles{
    <style>
        .pd-sm-b-40 {
            padding-bottom: 5px;
        }

        :root {
            --white: #ffffff;
            --light: #f0eff3;
            --black: #000000;
            --dark-blue: #1f2029;
            --dark-light: #353746;
            --red: #da2c4d;
            --yellow: #f8ab37;
            --grey: #ecedf3;
        }

        [type="radio"]:checked,
        [type="radio"]:not(:checked) {
            position: absolute;
            left: -9999px;
            width: 0;
            height: 0;
            visibility: hidden;
        }

        .checkbox-tools:checked + label,
        .checkbox-tools:not(:checked) + label {
            position: relative;
            /*display: inline-block;*/
            padding: 10px 10px 9px 10px;
            /*width: 110px;*/
            font-size: 14px;
            /*line-height: 20px;
            letter-spacing: 1px;
            margin: 0 auto;
            margin-right: 5px;
            margin-bottom: 10px;*/
            margin-left: 5px;
            text-align: center;
            border-radius: 4px;
            /*overflow: hidden;*/
            cursor: pointer;
            text-transform: uppercase;
            color: var(--white);
            /*-webkit-transition: all 300ms linear;
            transition: all 300ms linear;*/
        }

        .checkbox-tools:not(:checked) + label {
            background-color: #ffffff;
            color: black;
            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
        }

        .checkbox-tools:checked + label {
            background-color: transparent;
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
        }

        .checkbox-tools:not(:checked) + label:hover {
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
        }

        .checkbox-tools:checked + label::before,
        .checkbox-tools:not(:checked) + label::before {
            position: absolute;
            content: '';
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 4px;
            background-color: #01a42f;
            z-index: -1;
        }

        .checkbox-tools:checked + label .uil,
        .checkbox-tools:not(:checked) + label .uil {
            font-size: 24px;
            /* line-height: 24px;*/
            display: block;
            padding-bottom: 10px;
        }
        /*language*/

        .checkbox-lang:checked + label,
        .checkbox-lang:not(:checked) + label {
            position: relative;
            /*display: inline-block;*/
            padding: 10px 10px 9px 10px;
            /*width: 110px;*/
            font-size: 14px;
            /*line-height: 20px;
            letter-spacing: 1px;
            margin: 0 auto;
            margin-right: 5px;
            margin-bottom: 10px;*/
            margin-left: 5px;
            text-align: center;
            border-radius: 4px;
            /*overflow: hidden;*/
            cursor: pointer;
            text-transform: uppercase;
            color: var(--white);
            /*-webkit-transition: all 300ms linear;
            transition: all 300ms linear;*/
        }

        .checkbox-lang:not(:checked) + label {
            background-color: #ffffff;
            color: black;
            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
        }

        .checkbox-lang:checked + label {
            background-color: transparent;
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
        }

        .checkbox-lang:not(:checked) + label:hover {
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
        }

        .checkbox-lang:checked + label::before,
        .checkbox-lang:not(:checked) + label::before {
            position: absolute;
            content: '';
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 4px;
            background-color: #01a42f;
            z-index: -1;
        }

        .checkbox-lang:checked + label .uil,
        .checkbox-lang:not(:checked) + label .uil {
            font-size: 24px;
            /*line-height: 24px;*/
            display: block;
            padding-bottom: 10px;
        }

        .check:before {
            font-family: 'Font Awesome 5 Free';
            content: '\f058';
            color: #01a42f;
        }

        .table-responsive {
            display: block;
            width: 100%;
            overflow: hidden;
            overflow-x: hidden;
            -webkit-overflow-scrolling: touch;
        }

        .dataTables_paginate {
            height: 25px;
        }

        .container {
            max-width: 1440px
        }

        table.dataTable thead .sorting_asc, table.dataTable thead .sorting_desc {
            background-image: none;
            background-color: #e3e7ed;
            position: relative;
        }

        table.dataTable tbody td.sorting_1 {
            background-color: unset;
        }

        .form-fieldset {
            background-color: unset;
            border: 1px solid rgba(72,94,144,.16);
            padding: 20px 25px 25px;
            border-radius: .25rem;
        }

        tbody tr.selected:not(.collapse-row) {
            background-color: #3461c8 !important;
            color: white;
        }

            tbody tr.selected:not(.collapse-row) a {
                color: white;
            }
    </style>
}
@*@using (Html.BeginForm("CourseStudent", "Customer", FormMethod.Get, new { id = "form-search" }))
{*@
    <div class="d-xl-flex align-items-center justify-content-between row">
        <div class="row">
            <div class="col-12">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb breadcrumb-style1 mg-b-0">
                        <li class="breadcrumb-item active" aria-current="page">Học viên trong khóa</li>
                    </ol>
                </nav>
            </div>
        </div>

        <div class="wd-100p">
            <div class="d-flex justify-content-xl-center mg-t-20 mg-xl-t-0 flex-wrap">
                <div class="search-form mg-l-5 mg-r-5">
                    <input type="text" name="search" class="form-control" placeholder="Tìm kiếm..." value="@ViewBag.Search">
                    <button class="btn" type="button" id="btn-search" style="max-height:38px;"><i data-feather="search"></i></button>
                    <input type="hidden" name="hdProgram" value="@ViewBag.Program" />
                    <input type="hidden" name="hdGrade" value="@ViewBag.Grade" />
                </div>
                <div class=" mg-r-5">
                    <select name="slTVV" class="select2 form-control">
                        <option value="0">---</option>
                        @foreach (var i in tvvs)
                        {
                            <option value="@i.ID">@i.FullName - @i.RoleName</option>
                        }
                    </select>
                    <script>$('select[name=slTVV]').val(@ViewBag.TVV)</script>
                </div>
                <div>
                    @foreach (var i in languages)
                    {
                        if (i.ID == ViewBag.Language)
                        {
                            <input class="checkbox-lang" type="radio" name="cblang" id="lang-@i.ID" checked value="@i.ID">
                            <label for="lang-@i.ID" onclick="LoadGrade(@i.ID)">
                                @i.Name
                            </label>
                        }
                        else
                        {
                            <input class="checkbox-lang" type="radio" name="cblang" id="lang-@i.ID" value="@i.ID">
                            <label for="lang-@i.ID" onclick="LoadGrade(@i.ID)">
                                @i.Name
                            </label>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="wd-100p">
        <div class="d-flex justify-content-xl-center mg-t-20 mg-xl-t-0 flex-wrap">
            <div id="div-grade">
            </div>
        </div>
    </div>
    <hr />
    <div class="wd-100p">
        <div class="d-flex justify-content-xl-center mg-t-20 mg-xl-t-0 flex-wrap">
            <div id="div-program">
            </div>
        </div>
    </div>
@*}*@

<div class="mg-t-30">
    <div class="table-responsive" style="overflow-x:scroll;">
        <table class="table table-striped table-vcenter" id="data-table">
            <thead class="thead-light">
                <tr>
                    <th class="no-wrap"></th>
                    <th class="no-wrap">Học viên</th>
                    <th class="no-wrap">Số điện thoại</th>
                    <th class="no-wrap">Email</th>
                    <th class="no-wrap">Tư vấn viên</th>
                    <th class="no-wrap">Gói CKCL</th>
                    <th class="no-wrap">Trình độ đầu vào</th>
                    <th class="no-wrap">Trình độ đầu ra</th>
                    <th>Lớp</th>
                    <th class="no-wrap">Học vụ</th>
                    <th class="no-wrap">Thời lượng thực tế / đăng ký</th>
                    @*<th class="no-wrap">Thời lượng học </th>*@
                    <th class="no-wrap">Lịch học</th>
                    <th class="no-wrap">Múi giờ</th>
                    <th class="no-wrap">Giáo viên</th>
                    <th class="no-wrap">Ngày đăng ký</th>
                    <th class="no-wrap">Ngày bắt đầu</th>
                    <th class="no-wrap">Số buổi còn lại</th>
                    <th class="no-wrap">Giáo trình</th>
                </tr>
            </thead>
            <tbody id="table-body">
                @*@{
                        foreach (var item in Model)
                        {
                            <tr class="tr-row">
                                <td class="no-wrap">@item.StudentName</td>
                                <td class="no-wrap">@item.Phone</td>
                                <td class="no-wrap">@item.Email</td>
                                <td class="no-wrap">@item.SupportName</td>
                                <td class="no-wrap">@item.CommitmentName</td>
                                <td class="no-wrap">@item.InLevel</td>
                                <td class="no-wrap">@item.OutLevel</td>
                                <td><a href="@Url.Action("ScheduleCourse","CourseDetail", new { id = item.CourseID })">@item.CourseName</a></td>
                                <td class="no-wrap">@item.AcademicName</td>
                                <td class="no-wrap">@item.Lesson</td>
                                <td class="no-wrap">@item.LessonRegister</td>
                                <td class="no-wrap">@item.TimeSchedule</td>
                                <td class="no-wrap">@item.Nation - @item.TimeZoneName</td>
                                <td class="no-wrap">@item.TeacherName</td>
                                <td>
                                    @if (item.CreatedDate != null)
                                    {
                                        <span>@item.CreatedDate.Value.ToString("dd/MM/yyyy")</span>
                                    }
                                </td>
                                <td>
                                    @if (item.OpeningDate != null)
                                    {
                                        <span>@item.OpeningDate.Value.ToString("dd/MM/yyyy")</span>
                                    }
                                </td>
                                <td>@item.RemainLesson</td>
                                <td class="no-wrap">
                                    <a class="pd-5" href="@Url.Action("CustomerDetai","Customer", new { area = "Admin", id = item.StudentUID  })" data-toggle="tooltip" data-placement="left" title="Chi tiết học viên"><i data-feather="eye"></i></a>
                                    <a class="pd-5 change-course" data-id="@item.ID" href="#div-modal-change" data-toggle="modal"><i data-toggle="tooltip" data-placement="left" title="Chuyển khóa" data-feather="shuffle"></i></a>
                                    <a class="pd-5 student-reserve" href="#div-modal-sleep" data-id="@item.ID" data-name="@item.StudentName" data-toggle="modal"><i data-toggle="tooltip" data-placement="left" title="Bảo lưu" data-feather="refresh-ccw"></i></a>
                                </td>
                            </tr>
                        }
                    }*@
            </tbody>
        </table>
    </div>

    @*<nav aria-label="Page navigation">
            <ul class="pagination mg-b-0 justify-content-end mg-t-10">
                <div class="pagination-container">
                    @PhanTrang.PhanTrangCustom(10, ViewBag.Page, ViewBag.PageCount, Request.RawUrl, strText)
                </div>
            </ul>
        </nav>*@
</div>

<div class="modal fade" id="div-modal-change" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("ChangeCourseStudent", "Customer", FormMethod.Post, new { id = "form-change-course" }))
            {
                <input type="hidden" name="hdfChangerID" id="hdfChangerID" required />
                <div class="modal-header pd-y-20 pd-x-20 pd-sm-x-30">
                    <a href="" role="button" class="close pos-absolute t-15 r-15" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </a>
                    <div class="media align-items-center">
                        <div class="media-body">
                            <h4 class="tx-18 tx-sm-20 mg-b-2">Chuyển khóa</h4>
                        </div>
                    </div><!-- media -->
                </div><!-- modal-header -->
                <div class="modal-body pd-sm-b-40 pd-sm-x-30">
                    <div class="personal-info">
                        <div class="form-row">
                            <div class="col-sm-4 form-group">
                                <label for="txt-full-name-change" class="">Học viên:</label>
                                <input type="text" class="form-control" id="txt-full-name-change" disabled>
                            </div>
                            <div class="col-sm-8 form-group">
                                <label for="txt-course-change" class="">Khóa hiện tại:</label>
                                <input type="tel" class="form-control" id="txt-course-change" disabled>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-sm-4 form-group">
                                <label for="txt-course-paid-change" class="">Đã đóng:</label>
                                <input type="text" class="form-control" id="txt-course-paid-change" disabled>
                            </div>
                            <div class="col-sm-8 form-group">
                                <label for="ddl-cource" class="">Khóa chuyển đến:</label>
                                <select id="ddl-cource" name="ddl-cource" class="form-control select2">
                                    <option data-price="" value="0">---Chọn khóa học---</option>
                                    @{
                                        foreach (var item in lccourse)
                                        {
                                            var lday = CoursesScheduleTable.getbycourseid(item.ID);
                                            int totalday = lday.Count;
                                            int ldaybefore = lday.Where(n => n.Date <= GetDateTime.Now.Date).ToList().Count();
                                            ///
                                            <option data-price="@String.Format("{0:0,0}", item.Price)" value="@item.ID">@item.CourseName [@ldaybefore/@totalday] - @item.ClassName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-sm-4 form-group">
                                <label for="txt-add-price" class="">Thanh toán thêm:</label>
                                <input type="text" class="form-control" name="txt-add-price" id="txt-add-price" oninput="moneyfm(this)" value="0" />
                            </div>
                            <div class="col-sm-8 form-group">
                                <label for="role" class="">Ghi chú:</label>
                                <textarea id="txt-note-change" name="txt-note-change" class="form-control" rows="1"></textarea>
                            </div>
                        </div>
                    </div>
                </div><!-- modal-body -->
                <div class="modal-footer pd-x-20 pd-y-15">
                    <button type="button" id="btn-check-change" class="btn btn-primary">Xác nhận</button>
                    <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                </div>
            }
        </div><!-- modal-content -->
    </div><!-- modal-dialog -->
</div><!-- modal -->

<div class="modal fade show" id="div-modal-refund" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("RefundCourseStudent", "Customer", FormMethod.Post))
            {
                <input type="hidden" name="hdfRefundAppointID" id="hdfRefundAppointID" required />
                <div class="modal-header pd-y-20 pd-x-20 pd-sm-x-30">
                    <a href="javascript:;" role="button" class="close pos-absolute t-15 r-15" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </a>
                    <div class="media align-items-center">
                        <div class="media-body">
                            <h4 class="tx-18 tx-sm-20 mg-b-2">Hoàn tiền</h4>
                        </div>
                    </div><!-- media -->
                </div><!-- modal-header -->
                <div class="modal-body pd-sm-b-40 pd-sm-x-30">
                    <div class="personal-info">
                        <div class="form-row">
                            <div class="col-sm-3 form-group">
                                <label for="txt-full-name-refund" class="">Học viên:</label>
                                <input type="text" class="form-control" id="txt-full-name-refund" disabled>
                            </div>
                            <div class="col-sm-3 form-group">
                                <label for="txt-deposit-refund" class="">Đã đóng:</label>
                                <input type="text" class="form-control" id="txt-deposit-refund" disabled>
                            </div>
                            <div class="col-sm-3 form-group">
                                <label for="txt-refund" class="">Hoàn trả:</label>
                                <input id="txt-refund" name="txt-refund" type="text" class="form-control" required placeholder="0" oninput="moneyfm(this)" />
                            </div>
                            <div class="col-sm-3 form-group">
                                <label for="email" class="">Xóa khỏi khóa:</label>
                                <div class="custom-control custom-checkbox mg-t-10">
                                    <input type="checkbox" class="custom-control-input" id="chk-kick-out" name="chk-kick-out">
                                    <label class="custom-control-label" for="chk-kick-out">Xóa khỏi khóa</label>
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-sm-12 form-group">
                                <label for="role" class="">Ghi chú:</label>
                                <textarea id="txt-note-refund" name="txt-note-refund" required class="form-control" rows="1"></textarea>
                            </div>
                        </div>
                    </div>
                </div><!-- modal-body -->
                <div class="modal-footer pd-x-20 pd-y-15">
                    <button type="submit" class="btn btn-primary">Xác nhận</button>
                    <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                </div>
            }
        </div><!-- modal-content -->
    </div><!-- modal-dialog -->
</div><!-- modal -->

<div class="modal fade" id="div-modal-sleep" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog wd-sm-800" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("ReserveCourseStudent", "Customer", FormMethod.Post))
            {
                <input type="hidden" name="hdfReserveID" id="hdfReserveID" required />
                <div class="modal-header pd-y-20 pd-x-20 pd-sm-x-30">
                    <a href="" role="button" class="close pos-absolute t-15 r-15" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </a>
                    <div class="media align-items-center">
                        <div class="media-body">
                            <h4 class="tx-18 tx-sm-20 mg-b-2">Bảo lưu khóa</h4>
                        </div>
                    </div><!-- media -->
                </div><!-- modal-header -->
                <div class="modal-body pd-sm-t-30 pd-sm-b-40 pd-sm-x-30">
                    <div class="personal-info">
                        <div class="form-row">
                            <div class="col-sm-6 form-group">
                                <label for="txt-bao-luu-name" class="">Học viên:</label>
                                <input type="text" class="form-control" id="txt-bao-luu-name" placeholder="Full name">
                            </div>
                            <div class="col-sm-6 form-group">
                                <label for="txt-date-reserve" class="">Hạn bảo lưu</label>
                                <input type="text" id="txt-date-reserve" name="txt-date-reserve" class="form-control datetimepicker date-only" placeholder="DD / MM / YYYY" value="">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-sm-12 form-group">
                                <label for="role" class="">Ghi chú:</label>
                                <textarea id="txt-note-reserve" name="txt-note-reserve" class="form-control" rows="2"></textarea>
                            </div>
                        </div>
                    </div>
                </div><!-- modal-body -->
                <div class="modal-footer pd-x-20 pd-y-15">
                    <button type="submit" class="btn btn-primary">Xác nhận</button>
                    <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                </div>
            }
        </div><!-- modal-content -->
    </div><!-- modal-dialog -->
</div><!-- modal -->

@{
    if (aclog.RoleID == 1 || aclog.RoleID == 2 || aclog.RoleID == 6 || aclog.RoleID == 7 || aclog.RoleID == 8)
    {
        <div class="modal fade" id="div-teacher-leader" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered wd-sm-400" role="document">
                <div class="modal-content">

                    <input type="hidden" name="hdfID" id="hdfID" />
                    <input type="hidden" name="hdf-url" />
                    <div class="modal-body pd-20 pd-sm-40">
                        <a href="" role="button" class="close pos-absolute t-15 r-15" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </a>
                        <div>
                            <h4>Cập nhật</h4>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <label>Tên khóa học:</label>
                                        <input name="txt-coursename" type="text" class="form-control" required />
                                    </div>
                                </div>
                            </div>
                            @{
                                if (aclog.RoleID != 7)
                                {
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <label for="txt-grade">Học vụ:</label>

                                                <select name="ddl-acdemic-officer" id="ddl-acdemic-officer" class="form-control select2" required></select>


                                            </div>
                                        </div>
                                    </div>

                                }
                                else
                                {
                                    <div class="form-group" style="display:none">
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <label for="txt-grade">Học vụ:</label>
                                                <select name="ddl-acdemic-officer" id="ddl-acdemic-officer" class="form-control select2" required></select>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            <div class="form-group" hidden>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <label for="txt-grade">Chủ nhiệm:</label>
                                        <select name="ddl-teacher-lead" id="ddl-teacher-lead" class="form-control select2" required></select>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <label>Số buổi học chênh lệch: <i class="far fa-question-circle" data-toggle="tooltip" data-placement="left" title="thiếu buổi học điền số âm, thừa buổi học điền số dương"></i></label>
                                        <input name="txt-lesson" placeholder="thiếu điền số âm, thừa điền số dương" type="number" class="form-control" required value="0" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <label>Giáo viên mới:</label>
                                        <select class="form-control select2" name="slTeacher">
                                            <option value="0">--Không thay đổi--</option>
                                            @foreach (var item in teachers)
                                            {
                                                <option value="@item.ID">@item.FullName</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <label>Số buổi áp dụng:</label>
                                </div>
                                <div class="col-6">
                                    <label>Lương/ buổi:</label>
                                </div>
                            </div>
                            <div class="form-group text-center">
                                <a href="javascript:;" onclick="add_salary()" style="font-size:20px;"><i class="fas fa-plus-circle"></i> Lương theo buổi học</a>
                            </div>
                            <div class="form-group" id="div-salary">
                            </div>
                            <input type="hidden" name="hd-salary" />
                            <div class="form-group">
                                <select class="select2 form-control" name="slStatus-field">
                                    <option value="1">Sắp mở</option>
                                    <option value="2">Đang mở</option>
                                    <option value="3">Đã đóng</option>
                                </select>
                            </div>
                            <button type="button" class="btn btn-primary btn-block btn-save">Lưu lại</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

<div class="modal fade" id="div-studentappointment" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered wd-sm-400" role="document">
        <div class="modal-content">
            <div class="modal-body pd-20 pd-sm-40">
                <a href="" role="button" class="close pos-absolute t-15 r-15" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </a>
                <div>
                    <h4>Cập nhật</h4>
                    <input type="hidden" name="hd-studentappointment" id="hd-studentappointment" />
                    <div class="form-group">
                        <div class="row">
                            <div class="col-sm-12">
                                <label>Thời lượng học thực tế</label>
                                <input name="txt-real-lesson" type="number" class="form-control" required value="0" />
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <div class="row">
                            <div class="col-sm-12">
                                <label>Thời lượng học đăng ký</label>
                                <input name="txt-register-lesson" type="number" class="form-control" required value="0" />
                            </div>
                        </div>
                    </div>

                    <button type="button" class="btn btn-primary btn-block btn-save-studentappointment">Lưu lại</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section myScripts{
    <script src="~/app-assets/js/accounting.min.js"></script>
    <script src="~/app-assets/zimv2/lib/datatables.net/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
             if (!ckstring('@TempData["InvoiceURL"]')) {
                // invoice
                window.open('@TempData["InvoiceURL"]');
            }

            LoadGrade($("input[type='radio']:checked").val());
            LoadProgram($("input[name=hdGrade]").val());
        });



    $(document).on("click", ".refund-app", function () {
        var id = $(this).attr('data-id');
        $('#hdfRefundAppointID').val(id);
        $.ajax({
            type: "POST",
            url: "/Admin/Customer/CheckRefundCourseStudent",
            data: '{id: ' + id + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                if (msg.rs) {
                    $('#txt-full-name-refund').val(msg.fullname);
                    $('#txt-deposit-refund').val(msg.deposit);
                    $('#div-modal-refund').modal('show');
                }
                else {
                    toast.create({
                        title: 'Thông báo!',
                        text: 'Đã gửi yêu cầu hoàn tiền cho admin',
                        icon: 'notifications_active',
                        classBackground: 'noti-warning',
                        timeout: 3000
                    })
                    return;
                }
            },
            error: function (xmlhttprequest, textstatus, errorthrow) {
                console.log("error view-info");
            }
        });
    })
    $(document).on("click", ".student-reserve", function () {
        var id = $(this).attr('data-id');
        var name = $(this).attr('data-name');
        $('#hdfReserveID').val(id);
        $('#txt-bao-luu-name').val(name);
    })

    $(document).on("click", ".change-course", function () {
        $('#ddl-cource').val(0);
        $('#ddl-cource').trigger('change');
        $('#txt-chenh-lech').val(0);
        $('#txt-add-price').val(0);

        var id = $(this).attr('data-id');
        $('#hdfChangerID').val(id);
        $.ajax({
            type: "POST",
            url: "/Admin/Customer/CheckCourseStudentChange",
            data: '{id: ' + id + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                if (msg.rs) {
                    $('#txt-full-name-change').val(msg.l.StudentName);
                    $('#txt-course-change').val(msg.course.CourseName);
                    $('#txt-course-paid-change').val(accounting.formatNumber(msg.l.TotalPaid));

                }
                else {
                    toast.create({
                        title: 'Thông báo!',
                        text: 'Không tìm thấy dữ liệu',
                        icon: 'notifications_active',
                        classBackground: 'noti-warning',
                        timeout: 3000
                    })
                    return;
                }
            },
            error: function (xmlhttprequest, textstatus, errorthrow) {
                console.log(xmlhttprequest);
            }
        });
    })

        $('#btn-check-change').click(function () {
            if ($('#ddl-cource').val() == '0') {
                toast.create({
                    title: 'Thông báo!',
                    text: 'Vui lòng chọn khóa học chuyển qua',
                    icon: 'notifications_active',
                    classBackground: 'noti-warning',
                    timeout: 3000
                })
                return false;
            }
            if (ckstring($('#txt-note-change').val())) {
                toast.create({
                    title: 'Thông báo!',
                    text: 'Vui lòng nhập ghi chú chuyển lớp',
                    icon: 'notifications_active',
                    classBackground: 'noti-warning',
                    timeout: 3000
                })
                $('#txt-note-change').focus();
                return false;
            }
            $('#form-change-course').submit();
            $(this).attr('disabled', true);
        });
        function LoadProgram(id) {
            $('#div-program').empty();
            $.ajax({
                type: "POST",
                url: "/Admin/Customer/LoadProgram",
                data: '{id: ' + id + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $('#div-program').html(msg.data);
                    setTimeout(() => {
                        let programid = $('input[name=hdProgram]').val();
                        $('#program-' + programid).prop('checked', true);
                    }, 100);
                },
                error: function (xmlhttprequest, textstatus, errorthrow) {
                    console.log(xmlhttprequest);
                }
            });
        }

        function LoadGrade(id) {
            $('#div-program').empty();
            $.ajax({
                type: "POST",
                url: "/Admin/Customer/LoadGrade",
                data: '{id: ' + id + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $('#div-grade').html(msg.data);
                    setTimeout(() => {
                        let gradeid = $('input[name=hdGrade]').val();
                        $('#grades-' + gradeid).prop('checked', true);
                    }, 100);
                },
                error: function (xmlhttprequest, textstatus, errorthrow) {
                    console.log(xmlhttprequest);
                }
            });
        }
        //function LoadAttention(student, course) {
        //    $.ajax({
        //        type: "POST",
        //        url: "/Admin/Customer/LoadAttention",
        //        data: '{student: ' + student + ', course:' + course + '}',
        //        contentType: "application/json; charset=utf-8",
        //        dataType: "json",
        //        success: function (msg) {
        //            let html = '';
        //            msg.data.forEach(item => {
        //                html += `<tr><td>` + moment(item.Date).format('DD/MM/YYYY') + `</td>
        //                            <td>` + item.sTime + ` - ` + item.eTime + `</td>
        //                            <td>` + item.FullName + `</td>
        //                            <td>` + (item.AttendanceName || '') + `</td>
        //                            <td>` + (item.LearningName || '') + `</td>
        //                            <td>` + (item.Note || '') + `</td>
        //                            <td class="` + (item.Warning == true ? 'check' : '') + `"></td>
        //                        </tr>`;
        //            });
        //            $('.table-body').html(html);
        //        },
        //        error: function (xmlhttprequest, textstatus, errorthrow) {
        //            console.log(xmlhttprequest);
        //        }
        //    });
        //}

        var getParams = function (url) {
            return new Promise((resolve, reject) => {
                var params = {};
                var parser = document.createElement('a');
                parser.href = url;
                var query = parser.search.substring(1);
                var vars = query.split('&');
                for (var i = 0; i < vars.length; i++) {
                    var pair = vars[i].split('=');
                    if (pair[1] != undefined) { params[pair[0]] = decodeURIComponent(pair[1]); }
                }
                resolve(params);
            });
        };

        var filterValues = {};
        $(document).ready(async function () {
            var url = window.location;
            let params = await getParams(url.href);
            let start = 0;
            let length = 10;
            if (params.length > 0) {
                start = params.start;
                length = params.length;
                defaultOrder = params.order;
                defaultDir = params.dir;
            }

            var refDataTable = $("#data-table").dataTable({
                "ordering": false,
                serverSide: true,
                bFilter: false,
                pageLength: length,
                lengthChange: false,
                bInfo: false,
                displayStart: start,
                processing: true,
                language: {
                    paginate: {
                        previous: "Prev"
                    },
                    processing: `<div class="loader" >
                                    <div class= "strip-holder">
                                        <img src="/app-assets/loading.gif" style="width:unset;" />
                                    </div>
                                </div>`
                },
                columns: [
                    {
                        data: function (data) {
                            return `<a class="pd-5" href="/Admin/Customer/CustomerDetai?id=${data.StudentUID}" data-toggle="tooltip" data-placement="left" title="Chi tiết học viên"><i data-feather="eye"></i></a>
                                    <a class="pd-5 change-course" data-id="${data.ID}" href="#div-modal-change" data-toggle="modal"><i data-toggle="tooltip" data-placement="left" title="Chuyển khóa" data-feather="shuffle"></i></a>
                                    <a class="pd-5 student-reserve" href="#div-modal-sleep" data-id="${data.ID}" data-name="${data.StudentName}" data-toggle="modal"><i data-toggle="tooltip" data-placement="left" title="Bảo lưu" data-feather="refresh-ccw"></i></a>
                                    <a href="#div-teacher-leader" data-courseid="${data.CourseID}" data-coursename="${data.CourseName}" data-coursestatus="${data.Status}" class="tx-info load-teacher-lead" data-toggle="modal"><i data-feather="pocket" data-toggle="tooltip" data-placement="left" title="Chỉnh sửa"></i></a>
                                    <a href="#div-studentappointment" data-id="${data.ID}" data-lesson="${data.Lesson}" data-lessonregister="${data.LessonRegister}" class="tx-info load-studentappointment" data-toggle="modal"><i data-feather="edit" data-toggle="tooltip" data-placement="left" title="Chỉnh sửa thời lượng học"></i></a>`
                        },
                        class: "no-wrap"
                    },
                    { data: "StudentName", class: "no-wrap" },
                    { data: "Phone", class: "no-wrap" },
                    { data: "Email" },
                    { data: "SupportName", class: "no-wrap" },
                    { data: "CommitmentName", class: "no-wrap" },
                    { data: "InLevel", class: "no-wrap" },
                    { data: "OutLevel", class: "no-wrap" },
                    {
                        data: function (data) {
                            return `<a class="btn" style="color:#01a42f;" href="/Admin/CourseDetail/ScheduleCourse?id=${data.CourseID}">${data.CourseName}</a>`;
                        }
                    },
                    { data: "AcademicName", class: "no-wrap" },
                    //{ data: "Lesson" },
                    //{ data: "LessonRegister" },
                    {
                        data: function (data) {
                            return `${data.Lesson ?? 0} / ${data.LessonRegister ?? 0}`;
                        }
                    },
                    {
                        data: "TimeSchedule",
                        class: "no-wrap",
                        render: function (data) {
                            data = data.replace(/,/g, '<br>')
                            return data;
                        }
                    },
                    {
                        data: function (data) {
                            if (data.Nation) {
                                return data.Nation + ' - ' + data.TimeZoneName;
                            } else {
                                return '';
                            }

                        },
                        class: "no-wrap"
                    },
                    {
                        data: function (data) {
                            return `<a class="btn" style="color:#01a42f;" href="/Admin/staff/ConfigurationTeacher?id=${data.TeacherID}">${data.TeacherName}</a>`;
                        },
                        class: "no-wrap"
                    },
                    { data: "CreatedDate" },
                    { data: "OpeningDate" },
                    { data: "RemainLesson" },
                    {
                        data: "CurriculumsName",
                        render: function (data) {
                            console.log(data);
                            data = data?.replace(/,/g, '<br>')
                            return data ?? "";
                        }
                    }
                ],
                ajax: async function (data, callback, settings) {
                    params = await getParams(url.href);
                    filterValues.draw = data.draw;
                    if (params.search != undefined && data.draw == "1") {
                        filterValues.search = params.search;
                        $('input[name="search"]').val(params.search);
                    }
                    if (params.slTVV != undefined && data.draw == "1") {
                        filterValues.slTVV = params.slTVV;
                        $("select[name='slTVV']").val(params.slTVV);
                    }
                    if (params.cblang != undefined && data.draw == "1") {
                        filterValues.cblang = params.cblang;
                        $("input[name='cblang']:checked").val(params.cblang);
                    }
                    if (params.hdGrade != undefined && data.draw == "1") {
                        filterValues.hdGrade = params.hdGrade;
                        $('input[name="hdGrade"]:checked').val(params.hdGrade);
                    }
                    if (params.hdProgram != undefined && data.draw == "1") {
                        filterValues.hdProgram = params.hdProgram;
                        $('input[name="hdProgram"]:checked').val(params.hdProgram);
                    }

                    if (params.length > 0 && data.draw == "1") {
                        filterValues.start = data.start = params.start;
                        filterValues.length = data.length = params.length;
                    }
                    else {
                        filterValues.start = data.start;
                        filterValues.length = data.length;
                    }

                    $.ajax({
                        url: 'CourseStudentAPI',
                        method: 'GET',
                        data: filterValues,
                        success: async function (msg) {
                            if (msg.redirect != undefined && msg.redirect != null) {
                                window.location.href = location.origin + msg.redirect;
                            }

                            let ajaxprams = await getParams(this.url);
                            if (ajaxprams.draw != 1) {
                                let queryString = "?";
                                for (var key in ajaxprams) {
                                    if (key != "draw") {
                                        queryString += "&" + key + "=" + ajaxprams[key];
                                    }
                                }
                                let state = ajaxprams;
                                let title = 'state' + filterValues.draw;
                                let query = queryString;
                                history.pushState(state, title, query)
                            }
                        },
                    }).done(callback, (data) => {
                        feather.replace();
                    });
                }
            });

            $('#btn-search').click(function () {
                pagesearch();
            });

            $('input[name=search]').keyup(function (event) {
                if (event.keyCode === 13) {
                    pagesearch();
                }
            });

            function pagesearch() {
                //$('#form-search').submit();

                filterValues.search = $('input[name="search"]').val();
                filterValues.slTVV = $('select[name="slTVV"]').val();
                filterValues.cblang = $('input[name="cblang"]:checked').val();
                filterValues.hdGrade = $('input[name="slGrade"]:checked').val();
                filterValues.hdProgram = $('input[name="slProgram"]:checked').val();
                //console.log($('select[name="slTVV"]').val());
                //console.log($('input[name="cblang"]:checked').val());
                //console.log($('input[name="slGrade"]:checked').val());
                //console.log($('input[name="slProgram"]:checked').val());
                refDataTable.fnDraw();
            };

            $(document).on('click', 'input[name="slProgram"]', function () {
                pagesearch();
            });

            $(document).on('change', 'select[name="slTVV"]', function () {
                pagesearch();
            });

            $(document).on("click", ".load-teacher-lead", function () {
                var id = $(this).attr('data-courseid');
                $('#hdfID').val(id);
                $('input[name=txt-coursename]').val($(this).attr('data-coursename'));
                $('select[name=slStatus-field]').val($(this).attr('data-coursestatus'));
                $('select[name=slStatus-field]').trigger('change');

                $.ajax({
                    type: "POST",
                    url: "/Admin/Course/LoadTeacherByCourse",
                    data: '{courseid: ' + id + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) {
                        $('#ddl-acdemic-officer').empty();
                        $('#ddl-acdemic-officer').append(msg.rs2).trigger('change');
                        $('input[name=txt-lesson]').empty();
                        $('input[name=txt-lesson]').val(msg.lesson);
                        $('#div-salary').html(msg.rs);
                    },
                    error: function (xmlhttprequest, textstatus, errorthrow) {
                        console.log(xmlhttprequest);
                    }
                });
            });

            $(document).on("click", ".load-studentappointment", function () {
                $('#hd-studentappointment').val($(this).attr('data-id'));
                $('input[name=txt-real-lesson]').val($(this).attr('data-lesson'));
                $('input[name=txt-register-lesson]').val($(this).attr('data-lessonregister'));
            });

            $('.btn-save').click(function () {

                let objectRequest = new Object();
                objectRequest.id = $('input[name=hdfID]').val();
                objectRequest.courseName = $('input[name=txt-coursename]').val();
                objectRequest.status = $('select[name=slStatus-field]').val();
                objectRequest.academic = $('select[name=ddl-acdemic-officer]').val();
                objectRequest.lesson = $('input[name=txt-lesson]').val();
                objectRequest.teacher = $('select[name=slTeacher]').val();
                objectRequest.salary = $('input[name=txt-salarytemp]').map(function () {
                    return this.value.replace(/,/g, '');
                }).get().toString();
                objectRequest.numberOfSalary = $('input[name=txt-numberoflessontemp]').map(function () {
                    return this.value;
                }).get().toString();

                $.ajax({
                    type: "POST",
                    url: "/Admin/Customer/UpdateTeacherByCourse",
                    data: JSON.stringify(objectRequest),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) {
                        if (msg.rs) {
                            toast.create({
                                title: 'Thông báo!',
                                text: 'Thành công',
                                icon: 'notifications_active',
                                classBackground: 'noti-success',
                                timeout: 3000
                            });
                        } else {
                            toast.create({
                                title: 'Thông báo!',
                                text: 'Thất bại',
                                icon: 'notifications_active',
                                classBackground: 'noti-error',
                                timeout: 3000
                            });
                        }
                        $('#div-teacher-leader').modal('hide');
                    },
                    error: function (xmlhttprequest, textstatus, errorthrow) {
                        console.log(xmlhttprequest);
                    }
                });
            });

            $('.btn-save-studentappointment').click(function () {
                let id = $('#hd-studentappointment').val();
                let lesson = $('input[name=txt-real-lesson]').val();
                let registerlesson = $('input[name=txt-register-lesson]').val();

                $.ajax({
                    type: "POST",
                    url: "/Admin/Customer/UpdateLesson",
                    data: '{id: ' + id + ', lesson:' + lesson + ', registerlesson:' + registerlesson + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) {
                        if (msg.rs) {
                            toast.create({
                                title: 'Thông báo!',
                                text: 'Thành công',
                                icon: 'notifications_active',
                                classBackground: 'noti-success',
                                timeout: 3000
                            });

                            window.location.reload();
                        } else {
                            toast.create({
                                title: 'Thông báo!',
                                text: 'Thất bại',
                                icon: 'notifications_active',
                                classBackground: 'noti-error',
                                timeout: 3000
                            });
                        }
                    },
                    error: function (xmlhttprequest, textstatus, errorthrow) {
                        console.log(xmlhttprequest);
                    }
                });
            });
        });

        var numberSalary = 1;
        function remove_salary(id) {
            var div_id = 'numberSalary-' + id;
            $('#' + div_id).remove();
        }

        function add_salary() {
            var html = '<div class="form-row" id="numberSalary-' + numberSalary + '" > ' +
                '<div class="form-group col-sm-6">' +
                '<input name="txt-numberoflessontemp" data-type="number" class="form-control" placeholder="Số buổi áp dụng" />' +
                '</div>' +
                '<div class="col-sm-5 form-group">' +
                '<input name="txt-salarytemp" data-type="currency" class="form-control" placeholder="Lương/ buổi" />' +
                '</div>' +
                '<div class="col-sm-1 form-group" style="padding:4px">' +
                '<a href="javascript:;" onclick="remove_salary(' + numberSalary + ')" style="float:left;font-size:20px;color:red"><i class="far fa-times-circle"></i></a>' +
                '</div>' +
                '</div>';
            $('#div-salary').append(html);
        }
    </script>
}