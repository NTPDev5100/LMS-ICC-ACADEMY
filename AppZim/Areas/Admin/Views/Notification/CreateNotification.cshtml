@using AppZim.TableSql
@using AppZim.Models
@using PagedList.Mvc;
@model PagedList.IPagedList<tbl_Notification>
@{
    ViewBag.Title = "CreateNotification";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdminNew.cshtml";
    List<tbl_School> schools = SchoolTable.getall().OrderBy(n => n.SchoolName).ToList();
    List<tbl_Language> languages = Language.GetAll();
}
<style>
    .table .tr-row + .collapse-row {
        background: white;
    }
</style>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb breadcrumb-style1 mg-b-30">
        <li class="breadcrumb-item active" aria-current="page">Tạo thông báo</li>
    </ol>
</nav>

<div class="create_notification">
    @using (Html.BeginForm("AddNotification", "Notification", FormMethod.Post, new { id = "form-create-noti" }))
    {
        <input type="hidden" id="hdfcontent" name="hdfcontent" />
        <input type="hidden" id="hdfemail" name="hdfemail" value="false" />
        <div class="form-row">
            <div class="col-3 form-group">
                <label>Trung tâm (Mặc định tất cả):</label>
                <select name="ddl-school" class="custom-select select2" multiple required>
                    @{
                        foreach (var item in schools)
                        {
                            <option selected value="@item.ID">@item.SchoolName</option>
                        }
                    }
                </select>
            </div>

            <div class="col-3 form-group">
                <label>Chức vụ</label>
                <select name="ddl-role" id="select-role" class="custom-select select2 mg-l-5" onchange="LoadAccount()" multiple>
                    <option value="0">Tất cả</option>
                    <option value="2">Trưởng phòng</option>
                    <option value="3">Trưởng nhóm</option>
                    <option value="4">Giáo viên</option>
                    <option value="5">Học viên</option>
                    <option value="6">Tư vấn viên</option>
                    <option value="7">Học vụ</option>
                </select>
            </div>

            <div class="col-3 form-group" id="slLangueid">
                <label>Loại giáo viên</label>
                <select class="custom-select select2 mg-l-" name="slLangue" id="slLangue" onchange="LoadAccount()" multiple>
                    <option value="0">---</option>
                    @foreach (var i in languages)
                    {
                        <option value="@i.ID">@i.Name</option>
                    }
                </select>
            </div>

            <div class="col-3 form-group">
                <label>Tài khoản</label>
                <select class="custom-select select2 mg-l-5" name="slAccount" multiple>
                </select>
            </div>
        </div>

        <div class="form-row">
            <div class="col-12">
                <label>Tiêu đề</label>
                <input type="text" name="txt-title" id="txt-title" class="form-control" placeholder="Notification title...">
            </div>
        </div>

        <div class="message-editor-wrap mg-y-20">
            <div id="content-editor">
            </div>
            <div class="d-flex justify-content-between mg-t-20">
                <div class="custom-control custom-switch">
                    <input type="checkbox" class="custom-control-input" onchange="notiemail()" id="chk-box">
                    <label class="custom-control-label" for="chk-box">Gửi mail</label>
                </div>
                <button type="button" id="btn-check" class="btn btn-primary">Tạo ngay</button>
            </div>
        </div>
    }
</div>

<div class="notification__wrap">
    <div class="table-responsive">
        <table class="table table-striped table-vcenter">
            <thead class="thead-light">
                <tr>
                    <th></th>
                    <th>Thời gian</th>
                    <th>Phạm vi</th>
                    <th>Trung tâm</th>
                    <th>Email</th>
                    <th>Tiêu đề</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var item in Model)
                    {
                        var ac = AccountTable.getbyusername(item.CreatedBy);
                        <tr class="tr-row">
                            <td><a href="javascript:;" class="collapse-toggle"><i class="fas fa-plus-square"></i></a></td>
                            <td><span>@item.CreatedDate.Value.ToString("dd/MM/yyyy")</span></td>
                            <td>
                                @{
                                    if (item.NotificationRoleID == 0)
                                    {
                                        <span class="badge badge-info">Tất cả</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-info">@AccountTable.getrolehtml(item.NotificationRoleID.Value)</span>
                                    }
                                }
                            </td>
                            <td>
                                @{
                                    var schoolsoption = NotificationOptionShcoolTable.getbynotificationid(item.ID);
                                    foreach (var s in schoolsoption)
                                    {
                                        var center = SchoolTable.getbyID(s.SchoolID.Value);
                                        <span>@center.SchoolName</span><br />
                                    }
                                }
                            </td>
                            <td>
                                @{
                                    if (item.PushEmail.Value)
                                    {
                                        <i data-feather="check-circle" style="color: #06c506;"></i>
                                    }
                                }
                            </td>
                            <td class="noti-content">@item.NotificationTitle</td>
                        </tr>
                        <tr class="collapse-row">
                            <td colspan="6">
                                <div class="collapse-content">@Html.Raw(item.NotificationContent)</div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <nav aria-label="Page navigation" class="mg-t-10">
        @Html.PagedListPager(Model, page => Url.Action("indexdoc", new { page }),
        new PagedListRenderOptions
        {
            UlElementClasses = new[] { "pagination mg-b-0 justify-content-end" },
        })
    </nav>
</div>

@section myScripts
{
    <script src="~/app-assets/tinymce/tinymce.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.table').on('click', '.collapse-toggle', function () {
                $(this).children().toggleClass('fa-plus-square').toggleClass('fa-minus-square');
                $(this).toggleClass('active').closest('tr.tr-row').next().find('.collapse-content')
                    .slideToggle(
                        200);
            })
            $('#slLangueid').css("display", "none");
        });

        $(document).ready(function () {
            function uploadImage() {
                var editor = tinymce.activeEditor;
                // create input element, call modal dialog w
                var fileInput = document.createElement('input');
                fileInput.setAttribute('type', 'file');
                fileInput.setAttribute('accept', 'image/png, image/gif, image/jpeg, image/bmp, image/x-icon');
                // if file is submitted run our key code
                fileInput.addEventListener('change', () => {
                    if (fileInput.files != null && fileInput.files[0] != null) {
                        // create instance of FileReader()
                        var formData = new FormData();
                        formData.append("FileUpload", fileInput.files[0]);
                        $.ajax({
                            async: false,
                            type: 'POST',
                            url: '/Admin/Notification/UploadFileImageNoti',
                            data: formData,
                            dataType: 'json',
                            contentType: false,
                            processData: false,
                            success: function (msg) {
                                console.log(msg.l);
                                editor.insertContent('<img src="' + msg.l + '"/>');
                            },
                            error: function (error) {
                                console.log('error upload file audio');
                            }
                        });
                    }
                });
                fileInput.click()
            }
            tinymce.init({
                selector: '#content-editor',
                height: 250,
                images_dataimg_filter: function (img) {
                    return img.hasAttribute('internal-blob');
                },
                plugins: 'print preview fullpage searchreplace autolink directionality fullscreen image link media table charmap hr toc insertdatetime advlist lists  wordcount  imagetools  textpattern',
                menubar: 'file edit insert view format table tools help',
                toolbar1: 'formatselect | bold italic strikethrough forecolor backcolor | link | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | table UploadImage link media | removeformat',
                setup: (editor) => {
                    editor.ui.registry.addButton('UploadImage', {
                        text: 'Image',
                        icon: 'image',
                        onAction: uploadImage
                    });
                }
            });
        });

        $('#btn-check').click(function () {
            if (confirm('Xác nhận tạo thông báo?')) {
                // Save it!
                var counttext = tinymce.editors[0].contentDocument.activeElement.innerText;
                var content = tinymce.editors[0].contentDocument.activeElement.innerHTML;
                $('input[name=hdfcontent]').val(content);
                if (counttext.length == 1) {
                    toast.create({
                        title: 'Thông báo!',
                        text: 'Vui lòng nhập nội dung thông báo',
                        icon: 'error_outline',
                        classBackground: 'noti-error',
                        timeout: 3000
                    })
                }
                else {
                    if (ckstring($('#txt-title').val())) {
                        toast.create({
                            title: 'Thông báo!',
                            text: 'Vui lòng nhập tiêu đề',
                            icon: 'error_outline',
                            classBackground: 'noti-error',
                            timeout: 3000
                        })
                        $('#txt-title').focus();
                    }
                    else {
                        $(this).attr('disabled', true);
                        $('#form-create-noti').submit();
                    }
                }
            }
        })

        function notiemail() {
            var vl = $('#hdfemail').val();
            if (vl == 'false') {
                $('#hdfemail').val('true');
            }
            else {
                $('#hdfemail').val('false');
            }
        }

        function LoadAccount() {
            var role = $('#select-role').val();
            role = role.toString();
            var language = $('#slLangue').val();
            language = language.toString();

            var arrRole = role.split(',');
            if (arrRole.indexOf('4') >= 0) {
                $('#slLangueid').css("display", "block");

            }
            else {
                $('#slLangueid').css("display", "none");
            }

            $.ajax({
                type: 'POST',
                url: '/Admin/Account/GetByRolesAndLanguage',
                data: '{roles: "' + role + '", languages:"' + language + '"}',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (msg) {
                    let total = msg.data.length;
                    let stringHtml = '<option value="0">--Tất cả---</option>';
                    for (let i = 0; i < total; i++) {
                        stringHtml += `<option value"${msg.data[i].ID}">${msg.data[i].FullName} - ${msg.data[i].RoleName}</option>`;
                    }
                    $('select[name=slAccount]').html(stringHtml);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
    </script>
}