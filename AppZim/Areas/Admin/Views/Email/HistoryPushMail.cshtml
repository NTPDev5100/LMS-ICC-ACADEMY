
@using AppZim.Models
@using AppZim.TableSql
@using MB.Extensions
@{
    ViewBag.Title = "HistoryPushMail";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdminNew.cshtml";
    //tbl_Account aclog = AccountTable.getbyID(Session["UID"].ToString().ToInt(0));
}
<style>
    .pd-sm-b-40 {
        padding-bottom: 5px;
    }

    tbody tr.selected:not(.collapse-row) {
        background-color: #3461c8 !important;
        color: white;
    }

        tbody tr.selected:not(.collapse-row) a {
            color: white;
        }

    .collapse-row > td .collapse-content {
        padding: 5px 10px;
        display: block;
    }

    .table-responsive {
        display: block;
        width: 100%;
        overflow: hidden;
        overflow-x: hidden;
        -webkit-overflow-scrolling: touch;
    }

    .dataTables_paginate {
        height: 25px;
    }

    .container {
        max-width: 1440px
    }

    table.dataTable thead .sorting_asc, table.dataTable thead .sorting_desc {
        background-image: none;
        background-color: #e3e7ed;
        position: relative;
    }

    table.dataTable tbody td.sorting_1 {
        background-color: unset;
    }

    .form-fieldset {
        background-color: unset;
        border: 1px solid rgba(72,94,144,.16);
        padding: 20px 25px 25px;
        border-radius: .25rem;
    }

    tbody tr.selected:not(.collapse-row) {
        background-color: #3461c8 !important;
        color: white;
    }

        tbody tr.selected:not(.collapse-row) a {
            color: white;
        }
    .hidden{
        display:none;
    }
    .boxshawdowntd {
        box-shadow: 0 5px 17px 2px rgb(0 0 0 / 14%), 0 3px 14px 2px rgb(0 0 0 / 12%), 0 5px 5px -3px rgb(0 0 0 / 20%);
    }
</style>


<div>
    <div class="d-xl-flex align-items-center justify-content-between ">
        <div>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb breadcrumb-style1 mg-b-0">
                    <li class="breadcrumb-item active" aria-current="page">Lịch sử gửi mail</li>
                </ol>
            </nav>
        </div>
        <div class="d-xl-block">
            <div class="d-flex justify-content-xl-center mg-t-20 mg-xl-t-0 flex-wrap">
                <div class="search-form mg-l-5 mg-r-10">
                    <input type="text" name="search" class="form-control" placeholder="Tìm kiếm..." value="">
                    <button class="btn btn-search" type="button"><i data-feather="search"></i></button>
                </div>
                <a href="#filterCollapse" class="btn btn-primary mg-r-5 mg-sm-r-0" role="button" data-toggle="collapse" aria-expanded="false" aria-controls="filterCollapse">
                    <i data-feather="filter"></i>
                </a>
            </div>
        </div>
    </div>
    <div class="collapse mg-t-10" id="filterCollapse">
        <div class="card">
            <div class="card-body">
                <div class="row flex-wrap">
                    <div class="form-group col-md-4 col-6 col-xl-6">
                        <label class="form-control-label">Lớp học:</label>
                        <select class="form-control select2" name="class">
                            <option value="0">-- Tất cả --</option>
                            @{
                                using (var db = new ZimEntities())
                                {
                                    var course = db.tbl_HistoryPushMail.Distinct().Select(i => new { CourseId = i.CourseId }).ToList();
                                    if (course.Count() != 0)
                                    {
                                        foreach (var item in course)
                                        {
                                            var co = db.tbl_Courses.Where(x => x.ID == item.CourseId).Select(i => new { i.CourseName }).FirstOrDefault();
                                            <option value="@item.CourseId">@co.CourseName</option>
                                        }
                                    }
                                }
                            }
                        </select>
                    </div>
                    <div class="form-group col-md-4 col-6 col-xl-2">
                        <label class="form-control-label">Bắt đầu từ:</label>
                        <input type="text" name="from" class="form-control datetimepicker from-date date-only" value="@ViewBag.From" placeholder="DD / MM / YYYY" autocomplete="off" />
                    </div>
                    <div class="form-group col-md-4 col-6 col-xl-2">
                        <label class="form-control-label">Đến:</label>
                        <input type="text" name="to" class="form-control datetimepicker to-date date-only" value="@ViewBag.To" placeholder="DD / MM / YYYY" autocomplete="off" />
                    </div>
                    <div class="form-group col-md-4 col-6 col-xl-2 text-center">
                        <label class="form-control-label">Thao tác:</label>
                        <div>
                            <button type="button" class="btn btn-primary mg-r-10 btn-search"><i data-feather="search"></i> Tìm kiếm</button>
                            @*<a href="javascript:;" class="btn btn-success export-excel" data-toggle="tooltip" title="Xuất Excel"><i data-feather="file-text"></i></a>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class=" mg-t-30">
        <div class="table-responsive">
            <table id="table-course" class="table table-striped table-vcenter">
                <thead class="thead-light">
                    <tr>
                        <th class="hidden">STT</th>
                        <th>Loại mail gửi</th>
                        <th>Lớp học</th>
                        <th>Ngày khai giảng</th>
                        <th>Người gửi</th>
                        <th>Ngày gửi</th>
                        <th class="no-wrap text-center"></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>





<div class="modal" tabindex="-1" role="dialog" id="js-edit-group">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <div class="form-group col-12">
                            <textarea rows="8" id="txt-introduction" class="introdution-editor form-control" placeholder="..."></textarea>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @section myScripts{
        <script src="~/app-assets/js/accounting.min.js"></script>
        <script src="~/app-assets/zimv2/lib/tinymce/tinymce.min.js"></script>
        <script src="~/app-assets/zimv2/lib/datatables.net/js/jquery.dataTables.min.js"></script>
        <script>
            $(document).ready(function () {
                function uploadImage() {
                    var editor = tinymce.activeEditor;
                    // create input element, call modal dialog w
                    var fileInput = document.createElement('input');
                    fileInput.setAttribute('type', 'file');
                    fileInput.setAttribute('accept', 'image/png, image/gif, image/jpeg, image/bmp, image/x-icon');
                    // if file is submitted run our key code
                    fileInput.addEventListener('change', () => {

                        if (fileInput.files != null && fileInput.files[0] != null) {
                            // create instance of FileReader()
                            var formData = new FormData();
                            formData.append("FileUpload", fileInput.files[0]);
                            $.ajax({
                                async: false,
                                type: 'POST',
                                url: '/Admin/Notification/UploadFileImageNoti',
                                data: formData,
                                dataType: 'json',
                                contentType: false,
                                processData: false,
                                success: function (msg) {
                                    console.log(msg.l);
                                    editor.insertContent('<img src="' + msg.l + '"/>');
                                },
                                error: function (error) {
                                    console.log('error upload file audio');
                                }
                            });
                        }
                    });
                    fileInput.click()
                }
                tinymce.init({
                    selector: '#txt-introduction',
                    height: 450,
                    width: '100%',
                    images_dataimg_filter: function (img) {
                        return img.hasAttribute('internal-blob');
                    },
                    plugins: 'print preview fullpage searchreplace autolink directionality fullscreen image link media table charmap hr toc insertdatetime advlist lists  wordcount  imagetools  textpattern',
                    menubar: 'file edit insert view format table tools help',
                    toolbar1: 'formatselect | bold italic strikethrough forecolor backcolor | link | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | table UploadImage link media | removeformat',
                    setup: (editor) => {
                        editor.ui.registry.addButton('UploadImage', {
                            text: 'Image',
                            icon: 'image',
                            onAction: uploadImage
                        });
                    }
                });
            });

            var getParams = function (url) {
                var params = {};
                var parser = document.createElement('a');
                parser.href = url;
                var query = parser.search.substring(1);
                var vars = query.split('&');
                for (var i = 0; i < vars.length; i++) {
                    var pair = vars[i].split('=');
                    if (pair[1] != undefined) { params[pair[0]] = decodeURIComponent(pair[1]); }
                }
                return params;
            };
            var CourseStudent_filterValues = {};
            $(document).ready(function () {
                var url = window.location;
                let params = getParams(url.href);
                let start = 0;
                let length = 20;
                let defaultOrder = 0;
                let defaultDir = "desc";
                if (params.length > 0) {

                    start = params.start;
                    length = params.length;
                    defaultOrder = params.order;
                    defaultDir = params.dir;
                }
                var tbl_CourseStudent = $("#table-course").dataTable({
                    "order": [[defaultOrder, defaultDir]],
                    serverSide: true,
                    bFilter: false,
                    pageLength: 20,
                    lengthChange: false,
                    bInfo: false,
                    bAutoWidth: false,
                    displayStart: start,
                    processing: true,
                    language: {
                        paginate: {
                            previous: "Prev"
                        },
                        processing: `<div class="loader" >
                                                                                                                        <div class= "strip-holder">
                                                                                                                            <img src="/app-assets/loading.gif" style="width:unset;" />
                                                                                                        </div>
                                                                                                    </div>`
                    },
                    columns: [
                        { data: "ID" },
                        { data: "TypeName" },
                        { data: "CourseName" },
                        { data: "NgayKhaiGiang" },
                        { data: "NguoiGuiMail" },
                        { data: "CreatedDate" },
                        {
                            data: null,
                            render: function (data, type, row) {
                                let btn_content = '<a href="javascript:;" class="loadcontentmail" data-id=' + row.ID + ' data-toggle="tooltip" title="Chi tiết"><i class="fas fa-envelope-open-text"></i></a>';
                                return btn_content;
                            }
                        },
                    ],
                    columnDefs: [
                        {
                            "targets": [6],
                            "orderable": false
                        },
                        {
                            "targets": [6],
                            "className": "text-center"
                        },
                        {
                            "targets": [0],
                            "className": "hidden"
                        }
                    ],
                    ajax: function (data, callback, settings) {
                        CourseStudent_filterValues.draw = data.draw;
                        if (params.search != undefined && data.draw == "1") {
                            CourseStudent_filterValues.search = params.search;
                            $('input[name="search"]').val(params.search);
                        }
                        if (params.from != undefined && data.draw == "1") {
                            CourseStudent_filterValues.from = params.from;
                            $("input[name='from']").val(params.from);
                        }
                        if (params.to != undefined && data.draw == "1") {
                            CourseStudent_filterValues.to = params.to;
                            $("input[name='to']").val(params.to);
                        }
                        if (params.class != undefined && data.draw == "1") {
                            CourseStudent_filterValues.class = params.class;
                            $('select[name="class"]').val(params.class).trigger("change");
                        }
                        if (params.length > 0 && data.draw == "1") {
                            CourseStudent_filterValues.start = data.start = params.start;
                            CourseStudent_filterValues.length = data.length = params.length;
                            CourseStudent_filterValues.order = data.order[0].column = params.order;
                            CourseStudent_filterValues.dir = data.order[0].dir = params.dir;
                        } else {
                            CourseStudent_filterValues.start = data.start;
                            CourseStudent_filterValues.length = data.length;
                            CourseStudent_filterValues.order = data.order[0].column;
                            CourseStudent_filterValues.dir = data.order[0].dir;
                        }
                        $.ajax({
                            url: 'LoadHistoryPushMail',
                            method: 'GET',
                            data: CourseStudent_filterValues,
                            success: function (msg) {
                                if (msg.redirect != undefined && msg.redirect != null) {
                                    window.location.href = location.origin + msg.redirect;
                                }
                                console.log(msg.data);
                                let ajaxprams = getParams(this.url);
                                console.log(this.url);
                                if (ajaxprams.draw != 1) {
                                    let queryString = "?";
                                    for (var key in ajaxprams) {
                                        if (key != "draw") {
                                            queryString += "&" + key + "=" + ajaxprams[key];
                                        }
                                    }
                                    let state = ajaxprams;
                                    let title = 'state' + CourseStudent_filterValues.draw;
                                    let query = queryString;
                                    history.pushState(state, title, query)
                                }
                            },
                        }).done(callback, (data) => {
                            feather.replace();
                            $('[data-toggle="tooltip"]').tooltip();
                        });
                    },
                    footerCallback: function (row, data, start, end, display) {
                        var api = this.api();
                        let totalRow = 0;
                        if (data.length > 0) {
                            totalRow = data[0].TotalRow;
                        }

                        $(api.column(6).header()).text(totalRow)
                    }
                });
                $('input[name=search]').keyup(function (event) {
                    if (event.keyCode === 13) {
                        pagesearch();
                    }
                });
                $('.btn-search').click(function () {
                    pagesearch();
                })
                function pagesearch() {
                    CourseStudent_filterValues.search = $('input[name="search"]').val();
                    CourseStudent_filterValues.class = $('select[name="class"]').val();
                    CourseStudent_filterValues.from = $('input[name="from"]').val();
                    CourseStudent_filterValues.to = $('input[name="to"]').val();
                    tbl_CourseStudent.fnDraw();
                }
            });


            $(document).on("click", ".loadcontentmail", function () {
                $('#blockmember').empty();
                let id = $(this).attr('data-id');
                $.ajax({
                    type: "POST",
                    url: "/Admin/Email/loadContent?id=" + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) {
                        if (msg.rs) {
                            $('.modal-title').html(msg.title);
                            const content = msg.data;
                            tinymce.get('txt-introduction').getBody().innerHTML = content;
                            $('#js-edit-group').modal('show');
                        }
                        else {
                            console.log("Lỗi rồi anh ơi");
                        }
                    },
                    error: function (xmlhttprequest, textstatus, errorthrow) {
                        console.log("e: view-history");
                    }
                });
            })



            function convertCurrency(money) {
                if (money != null) {
                    return money.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1.')
                }
                else {
                    return '';
                }
            }
        </script>
    }



