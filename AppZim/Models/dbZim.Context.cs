//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppZim.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ZimEntities : DbContext
    {
        public ZimEntities()
            : base("name=ZimEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DataTemp> DataTemps { get; set; }
        public virtual DbSet<tbl_AccountAdvisory> tbl_AccountAdvisory { get; set; }
        public virtual DbSet<tbl_AccountHistoryAdvisory> tbl_AccountHistoryAdvisory { get; set; }
        public virtual DbSet<tbl_AccountHistoryChange> tbl_AccountHistoryChange { get; set; }
        public virtual DbSet<tbl_AccountRank> tbl_AccountRank { get; set; }
        public virtual DbSet<tbl_AccountTotalHourTeaching> tbl_AccountTotalHourTeaching { get; set; }
        public virtual DbSet<tbl_AssignManagerSpecializeToSchool> tbl_AssignManagerSpecializeToSchool { get; set; }
        public virtual DbSet<tbl_AssignTeacherClass> tbl_AssignTeacherClass { get; set; }
        public virtual DbSet<tbl_Certificatce> tbl_Certificatce { get; set; }
        public virtual DbSet<tbl_CertificatceCustomer> tbl_CertificatceCustomer { get; set; }
        public virtual DbSet<tbl_City> tbl_City { get; set; }
        public virtual DbSet<tbl_Combo> tbl_Combo { get; set; }
        public virtual DbSet<tbl_CoursesAttendanceStudent> tbl_CoursesAttendanceStudent { get; set; }
        public virtual DbSet<tbl_CoursesAttendanceStudentWarning> tbl_CoursesAttendanceStudentWarning { get; set; }
        public virtual DbSet<tbl_CoursesExam> tbl_CoursesExam { get; set; }
        public virtual DbSet<tbl_CoursesExamDetail> tbl_CoursesExamDetail { get; set; }
        public virtual DbSet<tbl_CoursesExerciseDeadline> tbl_CoursesExerciseDeadline { get; set; }
        public virtual DbSet<tbl_CurriculumDetail> tbl_CurriculumDetail { get; set; }
        public virtual DbSet<tbl_CurriculumTeacher> tbl_CurriculumTeacher { get; set; }
        public virtual DbSet<tbl_DayOff> tbl_DayOff { get; set; }
        public virtual DbSet<tbl_DayOffTeacher> tbl_DayOffTeacher { get; set; }
        public virtual DbSet<tbl_DeviceBrowser> tbl_DeviceBrowser { get; set; }
        public virtual DbSet<tbl_Discount> tbl_Discount { get; set; }
        public virtual DbSet<tbl_District> tbl_District { get; set; }
        public virtual DbSet<tbl_Document> tbl_Document { get; set; }
        public virtual DbSet<tbl_DocumentCategory> tbl_DocumentCategory { get; set; }
        public virtual DbSet<tbl_DocumentCategoryZim> tbl_DocumentCategoryZim { get; set; }
        public virtual DbSet<tbl_DocumentZim> tbl_DocumentZim { get; set; }
        public virtual DbSet<tbl_ExerciceMultiChoise> tbl_ExerciceMultiChoise { get; set; }
        public virtual DbSet<tbl_Exercise> tbl_Exercise { get; set; }
        public virtual DbSet<tbl_ExerciseAddonDraft> tbl_ExerciseAddonDraft { get; set; }
        public virtual DbSet<tbl_ExerciseAddonDraftFix> tbl_ExerciseAddonDraftFix { get; set; }
        public virtual DbSet<tbl_ExerciseAddonDraftFixLinkAudio> tbl_ExerciseAddonDraftFixLinkAudio { get; set; }
        public virtual DbSet<tbl_ExerciseAddonStudent> tbl_ExerciseAddonStudent { get; set; }
        public virtual DbSet<tbl_ExerciseAddonStudentCheckFix> tbl_ExerciseAddonStudentCheckFix { get; set; }
        public virtual DbSet<tbl_ExerciseAddonStudentCommentRedo> tbl_ExerciseAddonStudentCommentRedo { get; set; }
        public virtual DbSet<tbl_ExerciseAddonStudentFileAudio> tbl_ExerciseAddonStudentFileAudio { get; set; }
        public virtual DbSet<tbl_ExerciseAddonStudentFix> tbl_ExerciseAddonStudentFix { get; set; }
        public virtual DbSet<tbl_ExerciseAddonStudentFixLinkAudio> tbl_ExerciseAddonStudentFixLinkAudio { get; set; }
        public virtual DbSet<tbl_ExerciseAddonStudentOnSetPackage> tbl_ExerciseAddonStudentOnSetPackage { get; set; }
        public virtual DbSet<tbl_ExerciseGroup> tbl_ExerciseGroup { get; set; }
        public virtual DbSet<tbl_ExerciseScoreDetail> tbl_ExerciseScoreDetail { get; set; }
        public virtual DbSet<tbl_FeedBack> tbl_FeedBack { get; set; }
        public virtual DbSet<tbl_FeedBackCategory> tbl_FeedBackCategory { get; set; }
        public virtual DbSet<tbl_FeedBackCheckSolution> tbl_FeedBackCheckSolution { get; set; }
        public virtual DbSet<tbl_FeedBackDetail> tbl_FeedBackDetail { get; set; }
        public virtual DbSet<tbl_FeedBackImportant> tbl_FeedBackImportant { get; set; }
        public virtual DbSet<tbl_FormReceiveInfoSetting> tbl_FormReceiveInfoSetting { get; set; }
        public virtual DbSet<tbl_Group> tbl_Group { get; set; }
        public virtual DbSet<tbl_HistoryPush> tbl_HistoryPush { get; set; }
        public virtual DbSet<tbl_Idioms> tbl_Idioms { get; set; }
        public virtual DbSet<tbl_InvoiceDetail> tbl_InvoiceDetail { get; set; }
        public virtual DbSet<tbl_Job> tbl_Job { get; set; }
        public virtual DbSet<tbl_Member> tbl_Member { get; set; }
        public virtual DbSet<tbl_Message> tbl_Message { get; set; }
        public virtual DbSet<tbl_Notification> tbl_Notification { get; set; }
        public virtual DbSet<tbl_NotificationCourse> tbl_NotificationCourse { get; set; }
        public virtual DbSet<tbl_NotificationOptionShcool> tbl_NotificationOptionShcool { get; set; }
        public virtual DbSet<tbl_PostComment> tbl_PostComment { get; set; }
        public virtual DbSet<tbl_PostContent> tbl_PostContent { get; set; }
        public virtual DbSet<tbl_Refunds> tbl_Refunds { get; set; }
        public virtual DbSet<tbl_SalaryTeacherOffline> tbl_SalaryTeacherOffline { get; set; }
        public virtual DbSet<tbl_SalaryTeacherOnline> tbl_SalaryTeacherOnline { get; set; }
        public virtual DbSet<tbl_School> tbl_School { get; set; }
        public virtual DbSet<tbl_SchoolRoom> tbl_SchoolRoom { get; set; }
        public virtual DbSet<tbl_SendEmailGroup> tbl_SendEmailGroup { get; set; }
        public virtual DbSet<tbl_ServiceExams> tbl_ServiceExams { get; set; }
        public virtual DbSet<tbl_Services> tbl_Services { get; set; }
        public virtual DbSet<tbl_ServicesStudent> tbl_ServicesStudent { get; set; }
        public virtual DbSet<tbl_ServicesStudentScoreDetail> tbl_ServicesStudentScoreDetail { get; set; }
        public virtual DbSet<tbl_SetPackage> tbl_SetPackage { get; set; }
        public virtual DbSet<tbl_SetPackageDetail> tbl_SetPackageDetail { get; set; }
        public virtual DbSet<tbl_SetPackageExaminers> tbl_SetPackageExaminers { get; set; }
        public virtual DbSet<tbl_SetPackageHistoryDetail> tbl_SetPackageHistoryDetail { get; set; }
        public virtual DbSet<tbl_SetPackagePointConfig> tbl_SetPackagePointConfig { get; set; }
        public virtual DbSet<tbl_SetPackageStudent> tbl_SetPackageStudent { get; set; }
        public virtual DbSet<tbl_SetPackageStudentExercise> tbl_SetPackageStudentExercise { get; set; }
        public virtual DbSet<tbl_SourceOfCustomer> tbl_SourceOfCustomer { get; set; }
        public virtual DbSet<tbl_StaffSalaryRoseSeller> tbl_StaffSalaryRoseSeller { get; set; }
        public virtual DbSet<tbl_Street> tbl_Street { get; set; }
        public virtual DbSet<tbl_StudentNote> tbl_StudentNote { get; set; }
        public virtual DbSet<tbl_Subject> tbl_Subject { get; set; }
        public virtual DbSet<tbl_SupplierServices> tbl_SupplierServices { get; set; }
        public virtual DbSet<tbl_TeacherCourse> tbl_TeacherCourse { get; set; }
        public virtual DbSet<tbl_TermOfService> tbl_TermOfService { get; set; }
        public virtual DbSet<tbl_Topic> tbl_Topic { get; set; }
        public virtual DbSet<tbl_Ward> tbl_Ward { get; set; }
        public virtual DbSet<tbl_ZoomMeetingInternal> tbl_ZoomMeetingInternal { get; set; }
        public virtual DbSet<tbl_ZoomRoomSchedule> tbl_ZoomRoomSchedule { get; set; }
        public virtual DbSet<tbl_ZoomTeacherAPI> tbl_ZoomTeacherAPI { get; set; }
        public virtual DbSet<tbl_ClassHistory> tbl_ClassHistory { get; set; }
        public virtual DbSet<tbl_FeedbackSchedule> tbl_FeedbackSchedule { get; set; }
        public virtual DbSet<tbl_NotificationSingle> tbl_NotificationSingle { get; set; }
        public virtual DbSet<tbl_CoursesNote> tbl_CoursesNote { get; set; }
        public virtual DbSet<tbl_ConfigureScore> tbl_ConfigureScore { get; set; }
        public virtual DbSet<tbl_GroupScore> tbl_GroupScore { get; set; }
        public virtual DbSet<tbl_ScoreStudent> tbl_ScoreStudent { get; set; }
        public virtual DbSet<tbl_ScoreStudentDetail> tbl_ScoreStudentDetail { get; set; }
        public virtual DbSet<tbl_DeviceMobile> tbl_DeviceMobile { get; set; }
        public virtual DbSet<tbl_NotificationSingleLog> tbl_NotificationSingleLog { get; set; }
        public virtual DbSet<tbl_SetPackageHistory> tbl_SetPackageHistory { get; set; }
        public virtual DbSet<tbl_Reason> tbl_Reason { get; set; }
        public virtual DbSet<tbl_HistoryPushMail> tbl_HistoryPushMail { get; set; }
        public virtual DbSet<tbl_Role> tbl_Role { get; set; }
        public virtual DbSet<tbl_MoneyExchangeRate> tbl_MoneyExchangeRate { get; set; }
        public virtual DbSet<tbl_StudyTime> tbl_StudyTime { get; set; }
        public virtual DbSet<tbl_ScheduleRecord> tbl_ScheduleRecord { get; set; }
        public virtual DbSet<tbl_StudentAppointmentTestDetail> tbl_StudentAppointmentTestDetail { get; set; }
        public virtual DbSet<tbl_CoursesScheduleFile> tbl_CoursesScheduleFile { get; set; }
        public virtual DbSet<tbl_EmailTemplate> tbl_EmailTemplate { get; set; }
        public virtual DbSet<tbl_FAQ> tbl_FAQ { get; set; }
        public virtual DbSet<tbl_AcademicPurposes> tbl_AcademicPurposes { get; set; }
        public virtual DbSet<tbl_Class> tbl_Class { get; set; }
        public virtual DbSet<tbl_Grade> tbl_Grade { get; set; }
        public virtual DbSet<tbl_Invoices> tbl_Invoices { get; set; }
        public virtual DbSet<tbl_Contract> tbl_Contract { get; set; }
        public virtual DbSet<tbl_DesiredStudyTime> tbl_DesiredStudyTime { get; set; }
        public virtual DbSet<tbl_Nation> tbl_Nation { get; set; }
        public virtual DbSet<tbl_CampaignSale> tbl_CampaignSale { get; set; }
        public virtual DbSet<tbl_CampaignSaleHistory> tbl_CampaignSaleHistory { get; set; }
        public virtual DbSet<tbl_Target> tbl_Target { get; set; }
        public virtual DbSet<tbl_PlatformInCampaign> tbl_PlatformInCampaign { get; set; }
        public virtual DbSet<tbl_TempPayroll> tbl_TempPayroll { get; set; }
        public virtual DbSet<tbl_ContractTeacher> tbl_ContractTeacher { get; set; }
        public virtual DbSet<tbl_SalaryPaidHistory> tbl_SalaryPaidHistory { get; set; }
        public virtual DbSet<tbl_TargetBonus> tbl_TargetBonus { get; set; }
        public virtual DbSet<tbl_ComboDetail> tbl_ComboDetail { get; set; }
        public virtual DbSet<tbl_Account> tbl_Account { get; set; }
        public virtual DbSet<tbl_StudyPath> tbl_StudyPath { get; set; }
        public virtual DbSet<tbl_CurriculumnInCourse> tbl_CurriculumnInCourse { get; set; }
        public virtual DbSet<tbl_Curriculum> tbl_Curriculum { get; set; }
        public virtual DbSet<tbl_AcademicLevel> tbl_AcademicLevel { get; set; }
        public virtual DbSet<tbl_CoursesScheduleHistory> tbl_CoursesScheduleHistory { get; set; }
        public virtual DbSet<tbl_CourseSalary> tbl_CourseSalary { get; set; }
        public virtual DbSet<tbl_Courses> tbl_Courses { get; set; }
        public virtual DbSet<tbl_TeacherSalaryDetail> tbl_TeacherSalaryDetail { get; set; }
        public virtual DbSet<tbl_CoursesSchedule> tbl_CoursesSchedule { get; set; }
        public virtual DbSet<tbl_StudentAppointmentTest> tbl_StudentAppointmentTest { get; set; }
        public virtual DbSet<tbl_TeacherSalary> tbl_TeacherSalary { get; set; }
        public virtual DbSet<tbl_HistoryAttendance> tbl_HistoryAttendance { get; set; }
        public virtual DbSet<tbl_HistoryUploadVideo> tbl_HistoryUploadVideo { get; set; }
        public virtual DbSet<tbl_CoursesStudent> tbl_CoursesStudent { get; set; }
        public virtual DbSet<tbl_Language> tbl_Language { get; set; }
        public virtual DbSet<tbl_ContractCustomer> tbl_ContractCustomer { get; set; }
        public virtual DbSet<tbl_Signature> tbl_Signature { get; set; }
        public virtual DbSet<tbl_CoursesStudentHistoryChange> tbl_CoursesStudentHistoryChange { get; set; }
        public virtual DbSet<tbl_StudentAppointment> tbl_StudentAppointment { get; set; }
        public virtual DbSet<tbl_MoneyReceiver> tbl_MoneyReceiver { get; set; }
        public virtual DbSet<tbl_StaffSalary> tbl_StaffSalary { get; set; }
        public virtual DbSet<tbl_SalarySetting> tbl_SalarySetting { get; set; }
        public virtual DbSet<tbl_ApprovalToLevelDown> tbl_ApprovalToLevelDown { get; set; }
        public virtual DbSet<tbl_ApprovalToLevelUp> tbl_ApprovalToLevelUp { get; set; }
    
        public virtual ObjectResult<ASW_AccountCanTuVan_Result> ASW_AccountCanTuVan(string search, Nullable<int> sort, Nullable<int> status, string fdate, string tdate, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_AccountCanTuVan_Result>("ASW_AccountCanTuVan", searchParameter, sortParameter, statusParameter, fdateParameter, tdateParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<ASW_CampaignSale_ExportExcel_Result> ASW_CampaignSale_ExportExcel(string search, Nullable<int> sort, Nullable<int> isHide)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var isHideParameter = isHide.HasValue ?
                new ObjectParameter("isHide", isHide) :
                new ObjectParameter("isHide", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_CampaignSale_ExportExcel_Result>("ASW_CampaignSale_ExportExcel", searchParameter, sortParameter, isHideParameter);
        }
    
        public virtual ObjectResult<ASW_ChangeCourse_ExportExcel_Result> ASW_ChangeCourse_ExportExcel(string search, Nullable<int> center, string fromdate, string todate, Nullable<int> sort)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_ChangeCourse_ExportExcel_Result>("ASW_ChangeCourse_ExportExcel", searchParameter, centerParameter, fromdateParameter, todateParameter, sortParameter);
        }
    
        public virtual ObjectResult<ASW_CourseList_ExportExcel_Result> ASW_CourseList_ExportExcel(string search, Nullable<int> school, Nullable<int> lop, string fromdate, string todate, Nullable<int> sort)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var schoolParameter = school.HasValue ?
                new ObjectParameter("school", school) :
                new ObjectParameter("school", typeof(int));
    
            var lopParameter = lop.HasValue ?
                new ObjectParameter("lop", lop) :
                new ObjectParameter("lop", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_CourseList_ExportExcel_Result>("ASW_CourseList_ExportExcel", searchParameter, schoolParameter, lopParameter, fromdateParameter, todateParameter, sortParameter);
        }
    
        public virtual ObjectResult<ASW_CourseList_Online_Result> ASW_CourseList_Online(string search, Nullable<int> school, string fromdate, string todate, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var schoolParameter = school.HasValue ?
                new ObjectParameter("school", school) :
                new ObjectParameter("school", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_CourseList_Online_Result>("ASW_CourseList_Online", searchParameter, schoolParameter, fromdateParameter, todateParameter, sortParameter, pagesizeParameter, pageindexParameter);
        }
    
        public virtual ObjectResult<ASW_CourseList_Online_ExportExcel_Result> ASW_CourseList_Online_ExportExcel(string search, Nullable<int> school, string fromdate, string todate, Nullable<int> sort)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var schoolParameter = school.HasValue ?
                new ObjectParameter("school", school) :
                new ObjectParameter("school", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_CourseList_Online_ExportExcel_Result>("ASW_CourseList_Online_ExportExcel", searchParameter, schoolParameter, fromdateParameter, todateParameter, sortParameter);
        }
    
        public virtual ObjectResult<ASW_CustomerDebts_ExportExcel_Result> ASW_CustomerDebts_ExportExcel(string search, Nullable<int> center, string fromdateleft, string todateleft, string fromdate, string todate, Nullable<int> sort)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var fromdateleftParameter = fromdateleft != null ?
                new ObjectParameter("fromdateleft", fromdateleft) :
                new ObjectParameter("fromdateleft", typeof(string));
    
            var todateleftParameter = todateleft != null ?
                new ObjectParameter("todateleft", todateleft) :
                new ObjectParameter("todateleft", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_CustomerDebts_ExportExcel_Result>("ASW_CustomerDebts_ExportExcel", searchParameter, centerParameter, fromdateleftParameter, todateleftParameter, fromdateParameter, todateParameter, sortParameter);
        }
    
        public virtual ObjectResult<ASW_CustomerReserve_ExportExcel_Result> ASW_CustomerReserve_ExportExcel(string search, Nullable<int> center, Nullable<int> lop, Nullable<int> ca, string fromdate, string todate, Nullable<int> sort)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var lopParameter = lop.HasValue ?
                new ObjectParameter("lop", lop) :
                new ObjectParameter("lop", typeof(int));
    
            var caParameter = ca.HasValue ?
                new ObjectParameter("ca", ca) :
                new ObjectParameter("ca", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_CustomerReserve_ExportExcel_Result>("ASW_CustomerReserve_ExportExcel", searchParameter, centerParameter, lopParameter, caParameter, fromdateParameter, todateParameter, sortParameter);
        }
    
        public virtual ObjectResult<ASW_Discount_ExportExcel_Result> ASW_Discount_ExportExcel(string search, Nullable<int> sort, Nullable<int> status, string fdate, string tdate)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_Discount_ExportExcel_Result>("ASW_Discount_ExportExcel", searchParameter, sortParameter, statusParameter, fdateParameter, tdateParameter);
        }
    
        public virtual ObjectResult<ASW_Discount_List_Result> ASW_Discount_List(string search, Nullable<int> sort, Nullable<int> status, string fdate, string tdate, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_Discount_List_Result>("ASW_Discount_List", searchParameter, sortParameter, statusParameter, fdateParameter, tdateParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<ASW_History_Seller_Result> ASW_History_Seller(string search, Nullable<int> sort, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_History_Seller_Result>("ASW_History_Seller", searchParameter, sortParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<ASW_History_Seller_ExportExcel_Result> ASW_History_Seller_ExportExcel(string search, Nullable<int> sort)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_History_Seller_ExportExcel_Result>("ASW_History_Seller_ExportExcel", searchParameter, sortParameter);
        }
    
        public virtual ObjectResult<ASW_SalaryReviewTeacher_Result> ASW_SalaryReviewTeacher(string search, Nullable<int> month, Nullable<int> year, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_SalaryReviewTeacher_Result>("ASW_SalaryReviewTeacher", searchParameter, monthParameter, yearParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<ASW_SalaryReviewTeacher_ExportExcel_Result> ASW_SalaryReviewTeacher_ExportExcel(string search, Nullable<int> month, Nullable<int> year)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_SalaryReviewTeacher_ExportExcel_Result>("ASW_SalaryReviewTeacher_ExportExcel", searchParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<ASW_SalaryReviewTeacher_Online_Result> ASW_SalaryReviewTeacher_Online(string search, Nullable<int> month, Nullable<int> year, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_SalaryReviewTeacher_Online_Result>("ASW_SalaryReviewTeacher_Online", searchParameter, monthParameter, yearParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<ASW_SalaryReviewTeacher_Online_ExportExcel_Result> ASW_SalaryReviewTeacher_Online_ExportExcel(string search, Nullable<int> month, Nullable<int> year)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_SalaryReviewTeacher_Online_ExportExcel_Result>("ASW_SalaryReviewTeacher_Online_ExportExcel", searchParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<ASW_ServiceExams_List_Result> ASW_ServiceExams_List(string search, Nullable<int> sort, Nullable<int> schoolID, Nullable<int> supplierID, string toNgayThi, string fromNgayThi, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("SchoolID", schoolID) :
                new ObjectParameter("SchoolID", typeof(int));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var toNgayThiParameter = toNgayThi != null ?
                new ObjectParameter("toNgayThi", toNgayThi) :
                new ObjectParameter("toNgayThi", typeof(string));
    
            var fromNgayThiParameter = fromNgayThi != null ?
                new ObjectParameter("fromNgayThi", fromNgayThi) :
                new ObjectParameter("fromNgayThi", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_ServiceExams_List_Result>("ASW_ServiceExams_List", searchParameter, sortParameter, schoolIDParameter, supplierIDParameter, toNgayThiParameter, fromNgayThiParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<ASW_Services_ExportExcel_Result> ASW_Services_ExportExcel(string search, Nullable<int> sort, Nullable<int> status)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_Services_ExportExcel_Result>("ASW_Services_ExportExcel", searchParameter, sortParameter, statusParameter);
        }
    
        public virtual ObjectResult<ASW_Services_List_Result> ASW_Services_List(string search, Nullable<int> sort, Nullable<int> status, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_Services_List_Result>("ASW_Services_List", searchParameter, sortParameter, statusParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<ASW_ServicesDetail_List_Result> ASW_ServicesDetail_List(string search, Nullable<int> sort, Nullable<int> serviceID, Nullable<int> examID, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("serviceID", serviceID) :
                new ObjectParameter("serviceID", typeof(int));
    
            var examIDParameter = examID.HasValue ?
                new ObjectParameter("examID", examID) :
                new ObjectParameter("examID", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_ServicesDetail_List_Result>("ASW_ServicesDetail_List", searchParameter, sortParameter, serviceIDParameter, examIDParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<ASW_ServicesDetail_List_ExportExcel_Result> ASW_ServicesDetail_List_ExportExcel(string search, Nullable<int> sort, Nullable<int> serviceID, Nullable<int> examID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("serviceID", serviceID) :
                new ObjectParameter("serviceID", typeof(int));
    
            var examIDParameter = examID.HasValue ?
                new ObjectParameter("examID", examID) :
                new ObjectParameter("examID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_ServicesDetail_List_ExportExcel_Result>("ASW_ServicesDetail_List_ExportExcel", searchParameter, sortParameter, serviceIDParameter, examIDParameter);
        }
    
        public virtual ObjectResult<ASW_SettingRoseSeller_Result> ASW_SettingRoseSeller(string search, Nullable<int> sort, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_SettingRoseSeller_Result>("ASW_SettingRoseSeller", searchParameter, sortParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<ASW_SupplierServices_ExportExcel_Result> ASW_SupplierServices_ExportExcel(string search, Nullable<int> sort, Nullable<int> status)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_SupplierServices_ExportExcel_Result>("ASW_SupplierServices_ExportExcel", searchParameter, sortParameter, statusParameter);
        }
    
        public virtual ObjectResult<ASW_SupplierServices_List_Result> ASW_SupplierServices_List(string search, Nullable<int> sort, Nullable<int> status, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_SupplierServices_List_Result>("ASW_SupplierServices_List", searchParameter, sortParameter, statusParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> check_permission(Nullable<int> aclogID, Nullable<int> roleID, Nullable<int> studentID)
        {
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("studentID", studentID) :
                new ObjectParameter("studentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("check_permission", aclogIDParameter, roleIDParameter, studentIDParameter);
        }
    
        public virtual ObjectResult<DistrictStudentCount_Result> DistrictStudentCount(Nullable<int> schoolID)
        {
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("schoolID", schoolID) :
                new ObjectParameter("schoolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistrictStudentCount_Result>("DistrictStudentCount", schoolIDParameter);
        }
    
        public virtual ObjectResult<get_bagde_notification_Result> get_bagde_notification(Nullable<int> roleID, Nullable<int> location, Nullable<int> supportID, Nullable<int> aclogID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var supportIDParameter = supportID.HasValue ?
                new ObjectParameter("supportID", supportID) :
                new ObjectParameter("supportID", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_bagde_notification_Result>("get_bagde_notification", roleIDParameter, locationParameter, supportIDParameter, aclogIDParameter);
        }
    
        public virtual ObjectResult<get_firt_rank_Result> get_firt_rank(Nullable<int> role, Nullable<int> type, Nullable<int> desc)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var descParameter = desc.HasValue ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_firt_rank_Result>("get_firt_rank", roleParameter, typeParameter, descParameter);
        }
    
        public virtual ObjectResult<get_list_course_datatable_Result> get_list_course_datatable(string search, Nullable<int> school, Nullable<int> lop, string fromdate, string todate, Nullable<int> sort, Nullable<int> lenght, Nullable<int> start, Nullable<int> role, Nullable<int> aclog)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var schoolParameter = school.HasValue ?
                new ObjectParameter("school", school) :
                new ObjectParameter("school", typeof(int));
    
            var lopParameter = lop.HasValue ?
                new ObjectParameter("lop", lop) :
                new ObjectParameter("lop", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_course_datatable_Result>("get_list_course_datatable", searchParameter, schoolParameter, lopParameter, fromdateParameter, todateParameter, sortParameter, lenghtParameter, startParameter, roleParameter, aclogParameter);
        }
    
        public virtual ObjectResult<get_list_feedback_Result> get_list_feedback(string search, Nullable<int> sort, Nullable<int> searchType, string fd, string td, Nullable<int> pageindex, Nullable<int> pagesize, Nullable<int> tvvid)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var searchTypeParameter = searchType.HasValue ?
                new ObjectParameter("searchType", searchType) :
                new ObjectParameter("searchType", typeof(int));
    
            var fdParameter = fd != null ?
                new ObjectParameter("fd", fd) :
                new ObjectParameter("fd", typeof(string));
    
            var tdParameter = td != null ?
                new ObjectParameter("td", td) :
                new ObjectParameter("td", typeof(string));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var tvvidParameter = tvvid.HasValue ?
                new ObjectParameter("tvvid", tvvid) :
                new ObjectParameter("tvvid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_feedback_Result>("get_list_feedback", searchParameter, sortParameter, searchTypeParameter, fdParameter, tdParameter, pageindexParameter, pagesizeParameter, tvvidParameter);
        }
    
        public virtual ObjectResult<get_list_of_customeradvisory_Result> get_list_of_customeradvisory(string search, Nullable<int> location, Nullable<int> source, Nullable<int> jobs, Nullable<int> status, string fromdate, string todate, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(int));
    
            var sourceParameter = source.HasValue ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(int));
    
            var jobsParameter = jobs.HasValue ?
                new ObjectParameter("jobs", jobs) :
                new ObjectParameter("jobs", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_customeradvisory_Result>("get_list_of_customeradvisory", searchParameter, locationParameter, sourceParameter, jobsParameter, statusParameter, fromdateParameter, todateParameter, sortParameter, pagesizeParameter, pageindexParameter);
        }
    
        public virtual ObjectResult<get_list_of_CustomerDebts_Result> get_list_of_CustomerDebts(string search, Nullable<int> center, string fromdateleft, string todateleft, string fromdate, string todate, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var fromdateleftParameter = fromdateleft != null ?
                new ObjectParameter("fromdateleft", fromdateleft) :
                new ObjectParameter("fromdateleft", typeof(string));
    
            var todateleftParameter = todateleft != null ?
                new ObjectParameter("todateleft", todateleft) :
                new ObjectParameter("todateleft", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_CustomerDebts_Result>("get_list_of_CustomerDebts", searchParameter, centerParameter, fromdateleftParameter, todateleftParameter, fromdateParameter, todateParameter, sortParameter, pagesizeParameter, pageindexParameter);
        }
    
        public virtual ObjectResult<get_list_of_CustomerDebts_DataTable_Result> get_list_of_CustomerDebts_DataTable(string search, Nullable<int> center, string fromdateleft, string todateleft, string fromdate, string todate, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex, Nullable<int> aclogID, Nullable<int> role)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var fromdateleftParameter = fromdateleft != null ?
                new ObjectParameter("fromdateleft", fromdateleft) :
                new ObjectParameter("fromdateleft", typeof(string));
    
            var todateleftParameter = todateleft != null ?
                new ObjectParameter("todateleft", todateleft) :
                new ObjectParameter("todateleft", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_CustomerDebts_DataTable_Result>("get_list_of_CustomerDebts_DataTable", searchParameter, centerParameter, fromdateleftParameter, todateleftParameter, fromdateParameter, todateParameter, sortParameter, pagesizeParameter, pageindexParameter, aclogIDParameter, roleParameter);
        }
    
        public virtual int get_list_of_invoice_DataTable(string search, Nullable<int> center, string fromdate, string todate, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex, Nullable<int> aclogID, Nullable<int> role)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_list_of_invoice_DataTable", searchParameter, centerParameter, fromdateParameter, todateParameter, sortParameter, pagesizeParameter, pageindexParameter, aclogIDParameter, roleParameter);
        }
    
        public virtual ObjectResult<get_list_of_invoice_to_export_excel_Result> get_list_of_invoice_to_export_excel(string search, Nullable<int> center, string fromdate, string todate, Nullable<int> sort)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_invoice_to_export_excel_Result>("get_list_of_invoice_to_export_excel", searchParameter, centerParameter, fromdateParameter, todateParameter, sortParameter);
        }
    
        public virtual ObjectResult<get_list_of_PaymentVoucher_Result> get_list_of_PaymentVoucher(string search, Nullable<int> center, string fromdate, string todate, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex, Nullable<int> hdfexport, Nullable<int> aclogID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var hdfexportParameter = hdfexport.HasValue ?
                new ObjectParameter("hdfexport", hdfexport) :
                new ObjectParameter("hdfexport", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_PaymentVoucher_Result>("get_list_of_PaymentVoucher", searchParameter, centerParameter, fromdateParameter, todateParameter, sortParameter, pagesizeParameter, pageindexParameter, hdfexportParameter, aclogIDParameter);
        }
    
        public virtual ObjectResult<get_list_of_Refund_Result> get_list_of_Refund(string search, Nullable<int> center, Nullable<int> status, string fromdate, string todate, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex, Nullable<int> aclogID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_Refund_Result>("get_list_of_Refund", searchParameter, centerParameter, statusParameter, fromdateParameter, todateParameter, sortParameter, pagesizeParameter, pageindexParameter, aclogIDParameter);
        }
    
        public virtual ObjectResult<Get_Student_ReadyTo_Test_Result> Get_Student_ReadyTo_Test(string qsearch, Nullable<int> count, Nullable<int> location, Nullable<int> supportID, Nullable<int> roleID, Nullable<int> aclogID)
        {
            var qsearchParameter = qsearch != null ?
                new ObjectParameter("qsearch", qsearch) :
                new ObjectParameter("qsearch", typeof(string));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var supportIDParameter = supportID.HasValue ?
                new ObjectParameter("supportID", supportID) :
                new ObjectParameter("supportID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Student_ReadyTo_Test_Result>("Get_Student_ReadyTo_Test", qsearchParameter, countParameter, locationParameter, supportIDParameter, roleIDParameter, aclogIDParameter);
        }
    
        public virtual ObjectResult<Get_Student_Set_Package_Result> Get_Student_Set_Package(string qsearch, Nullable<int> roleID, Nullable<int> aclogID)
        {
            var qsearchParameter = qsearch != null ?
                new ObjectParameter("qsearch", qsearch) :
                new ObjectParameter("qsearch", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Student_Set_Package_Result>("Get_Student_Set_Package", qsearchParameter, roleIDParameter, aclogIDParameter);
        }
    
        public virtual ObjectResult<get_teachcherSchedule_Result> get_teachcherSchedule(Nullable<int> teacherID, Nullable<System.DateTime> datestart, Nullable<System.DateTime> dateend)
        {
            var teacherIDParameter = teacherID.HasValue ?
                new ObjectParameter("teacherID", teacherID) :
                new ObjectParameter("teacherID", typeof(int));
    
            var datestartParameter = datestart.HasValue ?
                new ObjectParameter("datestart", datestart) :
                new ObjectParameter("datestart", typeof(System.DateTime));
    
            var dateendParameter = dateend.HasValue ?
                new ObjectParameter("dateend", dateend) :
                new ObjectParameter("dateend", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_teachcherSchedule_Result>("get_teachcherSchedule", teacherIDParameter, datestartParameter, dateendParameter);
        }
    
        public virtual ObjectResult<Get_TestResult_Student_Result> Get_TestResult_Student(Nullable<int> centerid, string qsearch, string fromdate, string todate, Nullable<int> roleID, Nullable<int> aclogID)
        {
            var centeridParameter = centerid.HasValue ?
                new ObjectParameter("centerid", centerid) :
                new ObjectParameter("centerid", typeof(int));
    
            var qsearchParameter = qsearch != null ?
                new ObjectParameter("qsearch", qsearch) :
                new ObjectParameter("qsearch", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_TestResult_Student_Result>("Get_TestResult_Student", centeridParameter, qsearchParameter, fromdateParameter, todateParameter, roleIDParameter, aclogIDParameter);
        }
    
        public virtual ObjectResult<getallcustomer_Result> getallcustomer(Nullable<int> role, string qsearch)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var qsearchParameter = qsearch != null ?
                new ObjectParameter("qsearch", qsearch) :
                new ObjectParameter("qsearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getallcustomer_Result>("getallcustomer", roleParameter, qsearchParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getallcustomernew_total(string qsearchtemp, Nullable<int> status_registertemp, Nullable<int> roleID, Nullable<int> aclogID, Nullable<int> city, Nullable<int> source, Nullable<int> jobs, Nullable<int> status, string fromdate, string todate)
        {
            var qsearchtempParameter = qsearchtemp != null ?
                new ObjectParameter("qsearchtemp", qsearchtemp) :
                new ObjectParameter("qsearchtemp", typeof(string));
    
            var status_registertempParameter = status_registertemp.HasValue ?
                new ObjectParameter("status_registertemp", status_registertemp) :
                new ObjectParameter("status_registertemp", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(int));
    
            var sourceParameter = source.HasValue ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(int));
    
            var jobsParameter = jobs.HasValue ?
                new ObjectParameter("jobs", jobs) :
                new ObjectParameter("jobs", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getallcustomernew_total", qsearchtempParameter, status_registertempParameter, roleIDParameter, aclogIDParameter, cityParameter, sourceParameter, jobsParameter, statusParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<getallwarning_Result> getallwarning(Nullable<int> centerid, Nullable<int> role, Nullable<int> uid, Nullable<int> type)
        {
            var centeridParameter = centerid.HasValue ?
                new ObjectParameter("centerid", centerid) :
                new ObjectParameter("centerid", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getallwarning_Result>("getallwarning", centeridParameter, roleParameter, uidParameter, typeParameter);
        }
    
        public virtual ObjectResult<getCampaignRevenueTVV_Result> getCampaignRevenueTVV(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string tVVName)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var tVVNameParameter = tVVName != null ?
                new ObjectParameter("TVVName", tVVName) :
                new ObjectParameter("TVVName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCampaignRevenueTVV_Result>("getCampaignRevenueTVV", startDateParameter, endDateParameter, tVVNameParameter);
        }
    
        public virtual ObjectResult<getCustomerInCourse_Export_Result> getCustomerInCourse_Export(string search, Nullable<int> center, string fromdate, string todate, Nullable<int> sort)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCustomerInCourse_Export_Result>("getCustomerInCourse_Export", searchParameter, centerParameter, fromdateParameter, todateParameter, sortParameter);
        }
    
        public virtual ObjectResult<lay_bai_cham_cua_giao_vien_de_kiem_tra_Result> lay_bai_cham_cua_giao_vien_de_kiem_tra(string qsearch, Nullable<int> status)
        {
            var qsearchParameter = qsearch != null ?
                new ObjectParameter("qsearch", qsearch) :
                new ObjectParameter("qsearch", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lay_bai_cham_cua_giao_vien_de_kiem_tra_Result>("lay_bai_cham_cua_giao_vien_de_kiem_tra", qsearchParameter, statusParameter);
        }
    
        public virtual ObjectResult<lay_doanhthu_hoadon_hocvien_cua_tvv_Result> lay_doanhthu_hoadon_hocvien_cua_tvv()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lay_doanhthu_hoadon_hocvien_cua_tvv_Result>("lay_doanhthu_hoadon_hocvien_cua_tvv");
        }
    
        public virtual ObjectResult<lay_giai_phap_cua_tu_van_vien_kiem_tra_Result> lay_giai_phap_cua_tu_van_vien_kiem_tra(string qsearch, Nullable<int> status)
        {
            var qsearchParameter = qsearch != null ?
                new ObjectParameter("qsearch", qsearch) :
                new ObjectParameter("qsearch", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lay_giai_phap_cua_tu_van_vien_kiem_tra_Result>("lay_giai_phap_cua_tu_van_vien_kiem_tra", qsearchParameter, statusParameter);
        }
    
        public virtual int sp_Generate_Inserts(string table_name, string target_table, string cols_to_include, string cols_to_exclude, string where, string order)
        {
            var table_nameParameter = table_name != null ?
                new ObjectParameter("table_name", table_name) :
                new ObjectParameter("table_name", typeof(string));
    
            var target_tableParameter = target_table != null ?
                new ObjectParameter("target_table", target_table) :
                new ObjectParameter("target_table", typeof(string));
    
            var cols_to_includeParameter = cols_to_include != null ?
                new ObjectParameter("cols_to_include", cols_to_include) :
                new ObjectParameter("cols_to_include", typeof(string));
    
            var cols_to_excludeParameter = cols_to_exclude != null ?
                new ObjectParameter("cols_to_exclude", cols_to_exclude) :
                new ObjectParameter("cols_to_exclude", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Generate_Inserts", table_nameParameter, target_tableParameter, cols_to_includeParameter, cols_to_excludeParameter, whereParameter, orderParameter);
        }
    
        public virtual ObjectResult<thong_ke_bai_tap_dashboard_Result> thong_ke_bai_tap_dashboard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<thong_ke_bai_tap_dashboard_Result>("thong_ke_bai_tap_dashboard");
        }
    
        public virtual ObjectResult<VietCoCo_certificate_browsing_Result> VietCoCo_certificate_browsing(string search, Nullable<int> sort, Nullable<int> start, Nullable<int> lenght, Nullable<int> aclogID, Nullable<int> role)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VietCoCo_certificate_browsing_Result>("VietCoCo_certificate_browsing", searchParameter, sortParameter, startParameter, lenghtParameter, aclogIDParameter, roleParameter);
        }
    
        public virtual ObjectResult<VietCoCo_configTeacherZoom_Result> VietCoCo_configTeacherZoom(string search, Nullable<int> sort, Nullable<int> start, Nullable<int> lenght, Nullable<int> aclogID, Nullable<int> role)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VietCoCo_configTeacherZoom_Result>("VietCoCo_configTeacherZoom", searchParameter, sortParameter, startParameter, lenghtParameter, aclogIDParameter, roleParameter);
        }
    
        public virtual ObjectResult<zoom_meeting_internal_Result> zoom_meeting_internal(string search, Nullable<int> sort, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<zoom_meeting_internal_Result>("zoom_meeting_internal", searchParameter, sortParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<Admin_Student_GetListStudentNotInCourse_Result> Admin_Student_GetListStudentNotInCourse(string search, Nullable<int> city, Nullable<int> source, Nullable<int> support, string fromdate, string todate, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(int));
    
            var sourceParameter = source.HasValue ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(int));
    
            var supportParameter = support.HasValue ?
                new ObjectParameter("support", support) :
                new ObjectParameter("support", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Student_GetListStudentNotInCourse_Result>("Admin_Student_GetListStudentNotInCourse", searchParameter, cityParameter, sourceParameter, supportParameter, fromdateParameter, todateParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_Student_GetCurrentCourse_Result> Admin_Student_GetCurrentCourse(Nullable<int> student)
        {
            var studentParameter = student.HasValue ?
                new ObjectParameter("student", student) :
                new ObjectParameter("student", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Student_GetCurrentCourse_Result>("Admin_Student_GetCurrentCourse", studentParameter);
        }
    
        public virtual ObjectResult<Admin_FeedbackSchedule_GetList_Result> Admin_FeedbackSchedule_GetList(Nullable<int> aclog, Nullable<int> course, Nullable<int> start, Nullable<int> length)
        {
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var courseParameter = course.HasValue ?
                new ObjectParameter("course", course) :
                new ObjectParameter("course", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_FeedbackSchedule_GetList_Result>("Admin_FeedbackSchedule_GetList", aclogParameter, courseParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_FeedbackSchedule_GetListFeedbacked_Result> Admin_FeedbackSchedule_GetListFeedbacked(Nullable<int> role, Nullable<int> aclog, Nullable<int> course, Nullable<int> start, Nullable<int> length)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var courseParameter = course.HasValue ?
                new ObjectParameter("course", course) :
                new ObjectParameter("course", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_FeedbackSchedule_GetListFeedbacked_Result>("Admin_FeedbackSchedule_GetListFeedbacked", roleParameter, aclogParameter, courseParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<API_answer_getListByGroupID_Result> API_answer_getListByGroupID(Nullable<int> groupid)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_answer_getListByGroupID_Result>("API_answer_getListByGroupID", groupidParameter);
        }
    
        public virtual ObjectResult<Admin_ExerciseGroup_GetList_Result> Admin_ExerciseGroup_GetList(string search, Nullable<int> curriculumn, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var curriculumnParameter = curriculumn.HasValue ?
                new ObjectParameter("curriculumn", curriculumn) :
                new ObjectParameter("curriculumn", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_ExerciseGroup_GetList_Result>("Admin_ExerciseGroup_GetList", searchParameter, curriculumnParameter, startParameter, lengthParameter);
        }
    
        public virtual int Admin_GetScoreByCurriculum(Nullable<int> courseid)
        {
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_GetScoreByCurriculum", courseidParameter);
        }
    
        public virtual int Admin_GroupScore_GetList(Nullable<int> courseid, Nullable<int> studentid, Nullable<int> start, Nullable<int> length)
        {
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_GroupScore_GetList", courseidParameter, studentidParameter, startParameter, lengthParameter);
        }
    
        public virtual int Admin_IncludePlayerID_GetList(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_IncludePlayerID_GetList", searchParameter);
        }
    
        public virtual ObjectResult<Admin_Parents_GetList_Result> Admin_Parents_GetList(string search, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Parents_GetList_Result>("Admin_Parents_GetList", searchParameter, sortParameter, pagesizeParameter, pageindexParameter);
        }
    
        public virtual ObjectResult<API_doneexercise_getlist_Result> API_doneexercise_getlist(Nullable<int> aclogid, string search, Nullable<int> courseid, string fdate, string tdate, Nullable<int> start, Nullable<int> lenght)
        {
            var aclogidParameter = aclogid.HasValue ?
                new ObjectParameter("aclogid", aclogid) :
                new ObjectParameter("aclogid", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_doneexercise_getlist_Result>("API_doneexercise_getlist", aclogidParameter, searchParameter, courseidParameter, fdateParameter, tdateParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<API_Exercise_getlist_byGroupID_Result> API_Exercise_getlist_byGroupID(Nullable<int> aclog, Nullable<int> groupid)
        {
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Exercise_getlist_byGroupID_Result>("API_Exercise_getlist_byGroupID", aclogParameter, groupidParameter);
        }
    
        public virtual ObjectResult<API_Exercise_getResult_Result> API_Exercise_getResult(Nullable<int> aclog, Nullable<int> groupid)
        {
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Exercise_getResult_Result>("API_Exercise_getResult", aclogParameter, groupidParameter);
        }
    
        public virtual int API_ExerciseGroup_getlistByCurriculumnID(string curriculumnid)
        {
            var curriculumnidParameter = curriculumnid != null ?
                new ObjectParameter("curriculumnid", curriculumnid) :
                new ObjectParameter("curriculumnid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("API_ExerciseGroup_getlistByCurriculumnID", curriculumnidParameter);
        }
    
        public virtual ObjectResult<API_ExerciseResult_GetAudioLink_Result> API_ExerciseResult_GetAudioLink(Nullable<int> addoneid, Nullable<int> packageid)
        {
            var addoneidParameter = addoneid.HasValue ?
                new ObjectParameter("addoneid", addoneid) :
                new ObjectParameter("addoneid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_ExerciseResult_GetAudioLink_Result>("API_ExerciseResult_GetAudioLink", addoneidParameter, packageidParameter);
        }
    
        public virtual ObjectResult<API_Get_TestResult_Student_Result> API_Get_TestResult_Student(string qsearch, string status, string fromdate, string todate, Nullable<int> roleID, Nullable<int> aclogID, Nullable<int> start, Nullable<int> length)
        {
            var qsearchParameter = qsearch != null ?
                new ObjectParameter("qsearch", qsearch) :
                new ObjectParameter("qsearch", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Get_TestResult_Student_Result>("API_Get_TestResult_Student", qsearchParameter, statusParameter, fromdateParameter, todateParameter, roleIDParameter, aclogIDParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<API_getCourseDetail_Result> API_getCourseDetail(Nullable<int> courseid)
        {
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_getCourseDetail_Result>("API_getCourseDetail", courseidParameter);
        }
    
        public virtual ObjectResult<API_getCustomerWarning_Result> API_getCustomerWarning(Nullable<int> centerid, Nullable<int> role, Nullable<int> uid, string search, string fdate, string tdate, Nullable<int> start, Nullable<int> length)
        {
            var centeridParameter = centerid.HasValue ?
                new ObjectParameter("centerid", centerid) :
                new ObjectParameter("centerid", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_getCustomerWarning_Result>("API_getCustomerWarning", centeridParameter, roleParameter, uidParameter, searchParameter, fdateParameter, tdateParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<API_getTeacherSchedule_Result> API_getTeacherSchedule(Nullable<int> teacherid, string fdate, string tdate)
        {
            var teacheridParameter = teacherid.HasValue ?
                new ObjectParameter("teacherid", teacherid) :
                new ObjectParameter("teacherid", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_getTeacherSchedule_Result>("API_getTeacherSchedule", teacheridParameter, fdateParameter, tdateParameter);
        }
    
        public virtual ObjectResult<API_newexercise_getlist_Result> API_newexercise_getlist(Nullable<int> aclogid, string search, Nullable<int> courseid, Nullable<int> status, string fdate, string tdate, Nullable<int> start, Nullable<int> lenght)
        {
            var aclogidParameter = aclogid.HasValue ?
                new ObjectParameter("aclogid", aclogid) :
                new ObjectParameter("aclogid", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_newexercise_getlist_Result>("API_newexercise_getlist", aclogidParameter, searchParameter, courseidParameter, statusParameter, fdateParameter, tdateParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<API_notification_getlist_Result> API_notification_getlist(Nullable<int> studentid, Nullable<int> start, Nullable<int> lenght)
        {
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_notification_getlist_Result>("API_notification_getlist", studentidParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<API_Package_getList_Result> API_Package_getList(Nullable<int> aclog, string search, Nullable<int> type, Nullable<int> start, Nullable<int> length)
        {
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Package_getList_Result>("API_Package_getList", aclogParameter, searchParameter, typeParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<API_Package_getMyPackageList_Result> API_Package_getMyPackageList(Nullable<int> studentid, string search, Nullable<int> type, Nullable<int> start, Nullable<int> length)
        {
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Package_getMyPackageList_Result>("API_Package_getMyPackageList", studentidParameter, searchParameter, typeParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<API_Parents_GetDebts_Result> API_Parents_GetDebts(Nullable<int> studentid)
        {
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Parents_GetDebts_Result>("API_Parents_GetDebts", studentidParameter);
        }
    
        public virtual ObjectResult<API_processexercise_getlist_Result> API_processexercise_getlist(Nullable<int> aclogid, string search, Nullable<int> courseid, Nullable<int> status, string fdate, string tdate, Nullable<int> start, Nullable<int> lenght)
        {
            var aclogidParameter = aclogid.HasValue ?
                new ObjectParameter("aclogid", aclogid) :
                new ObjectParameter("aclogid", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_processexercise_getlist_Result>("API_processexercise_getlist", aclogidParameter, searchParameter, courseidParameter, statusParameter, fdateParameter, tdateParameter, startParameter, lenghtParameter);
        }
    
        public virtual int API_Score_GetListByCurriculumn(Nullable<int> curriculumn)
        {
            var curriculumnParameter = curriculumn.HasValue ?
                new ObjectParameter("curriculumn", curriculumn) :
                new ObjectParameter("curriculumn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("API_Score_GetListByCurriculumn", curriculumnParameter);
        }
    
        public virtual ObjectResult<API_Student_GetDoneExercise_Result> API_Student_GetDoneExercise(Nullable<int> aclog, Nullable<int> groupid)
        {
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Student_GetDoneExercise_Result>("API_Student_GetDoneExercise", aclogParameter, groupidParameter);
        }
    
        public virtual ObjectResult<API_Student_getStudyTimeByCourseID_Result> API_Student_getStudyTimeByCourseID(Nullable<int> courseid)
        {
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Student_getStudyTimeByCourseID_Result>("API_Student_getStudyTimeByCourseID", courseidParameter);
        }
    
        public virtual ObjectResult<API_Teacher_getListStudent_Result> API_Teacher_getListStudent(Nullable<int> courseid)
        {
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Teacher_getListStudent_Result>("API_Teacher_getListStudent", courseidParameter);
        }
    
        public virtual ObjectResult<API_Teacher_SearchStudent_Result> API_Teacher_SearchStudent(string search, Nullable<int> groupid)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Teacher_SearchStudent_Result>("API_Teacher_SearchStudent", searchParameter, groupidParameter);
        }
    
        public virtual ObjectResult<API_ticket_getlist_Result> API_ticket_getlist(Nullable<int> userid, Nullable<int> type, Nullable<int> start, Nullable<int> lenght)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_ticket_getlist_Result>("API_ticket_getlist", useridParameter, typeParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<API_ExerciseGroup_getlist_Result> API_ExerciseGroup_getlist(Nullable<int> aclog, Nullable<int> courseid, Nullable<int> curriculumid, Nullable<int> start, Nullable<int> length)
        {
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            var curriculumidParameter = curriculumid.HasValue ?
                new ObjectParameter("curriculumid", curriculumid) :
                new ObjectParameter("curriculumid", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_ExerciseGroup_getlist_Result>("API_ExerciseGroup_getlist", aclogParameter, courseidParameter, curriculumidParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<API_ExerciseGroup_getListForTeacher_Result> API_ExerciseGroup_getListForTeacher(Nullable<int> aclog, Nullable<int> courseid, Nullable<int> curriculumid, Nullable<int> start, Nullable<int> length)
        {
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            var curriculumidParameter = curriculumid.HasValue ?
                new ObjectParameter("curriculumid", curriculumid) :
                new ObjectParameter("curriculumid", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_ExerciseGroup_getListForTeacher_Result>("API_ExerciseGroup_getListForTeacher", aclogParameter, courseidParameter, curriculumidParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<API_Score_LoadScoreColumnForCombobox_Result> API_Score_LoadScoreColumnForCombobox(Nullable<int> curriculumnid)
        {
            var curriculumnidParameter = curriculumnid.HasValue ?
                new ObjectParameter("curriculumnid", curriculumnid) :
                new ObjectParameter("curriculumnid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Score_LoadScoreColumnForCombobox_Result>("API_Score_LoadScoreColumnForCombobox", curriculumnidParameter);
        }
    
        public virtual ObjectResult<API_ConfigScore_GetListByCurriculumn_Result> API_ConfigScore_GetListByCurriculumn(Nullable<int> curriculumn)
        {
            var curriculumnParameter = curriculumn.HasValue ?
                new ObjectParameter("curriculumn", curriculumn) :
                new ObjectParameter("curriculumn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_ConfigScore_GetListByCurriculumn_Result>("API_ConfigScore_GetListByCurriculumn", curriculumnParameter);
        }
    
        public virtual ObjectResult<API_Score_GetListByStudentID_Result> API_Score_GetListByStudentID(Nullable<int> configid, Nullable<int> studentid)
        {
            var configidParameter = configid.HasValue ?
                new ObjectParameter("configid", configid) :
                new ObjectParameter("configid", typeof(int));
    
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Score_GetListByStudentID_Result>("API_Score_GetListByStudentID", configidParameter, studentidParameter);
        }
    
        public virtual ObjectResult<API_Score_GetValue_Result> API_Score_GetValue(Nullable<int> curriculumnid)
        {
            var curriculumnidParameter = curriculumnid.HasValue ?
                new ObjectParameter("curriculumnid", curriculumnid) :
                new ObjectParameter("curriculumnid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Score_GetValue_Result>("API_Score_GetValue", curriculumnidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> API_GetListRating(Nullable<int> courseID, Nullable<int> rate, string sdate, string edate)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("courseID", courseID) :
                new ObjectParameter("courseID", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(int));
    
            var sdateParameter = sdate != null ?
                new ObjectParameter("sdate", sdate) :
                new ObjectParameter("sdate", typeof(string));
    
            var edateParameter = edate != null ?
                new ObjectParameter("edate", edate) :
                new ObjectParameter("edate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("API_GetListRating", courseIDParameter, rateParameter, sdateParameter, edateParameter);
        }
    
        public virtual ObjectResult<Admin_CourseSchedule_UpcomingStudent_Result> Admin_CourseSchedule_UpcomingStudent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_CourseSchedule_UpcomingStudent_Result>("Admin_CourseSchedule_UpcomingStudent");
        }
    
        public virtual ObjectResult<Admin_CourseSchedule_UpcomingTeacher_Result> Admin_CourseSchedule_UpcomingTeacher()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_CourseSchedule_UpcomingTeacher_Result>("Admin_CourseSchedule_UpcomingTeacher");
        }
    
        public virtual ObjectResult<API_Skill_GetList_Result> API_Skill_GetList(Nullable<int> aclog, Nullable<int> packageid)
        {
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Skill_GetList_Result>("API_Skill_GetList", aclogParameter, packageidParameter);
        }
    
        public virtual ObjectResult<Admin_SendMailAppointmemtTest_GetList_Result> Admin_SendMailAppointmemtTest_GetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_SendMailAppointmemtTest_GetList_Result>("Admin_SendMailAppointmemtTest_GetList");
        }
    
        public virtual ObjectResult<Admin_Student_0LessonCourseList_Result> Admin_Student_0LessonCourseList(string search, Nullable<int> searchMail, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var searchMailParameter = searchMail.HasValue ?
                new ObjectParameter("searchMail", searchMail) :
                new ObjectParameter("searchMail", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Student_0LessonCourseList_Result>("Admin_Student_0LessonCourseList", searchParameter, searchMailParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<SoLopTheoNgonNgu_Result> SoLopTheoNgonNgu(Nullable<int> languageID)
        {
            var languageIDParameter = languageID.HasValue ?
                new ObjectParameter("languageID", languageID) :
                new ObjectParameter("languageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SoLopTheoNgonNgu_Result>("SoLopTheoNgonNgu", languageIDParameter);
        }
    
        public virtual ObjectResult<get_list_history_push_mail_datatable_Result> get_list_history_push_mail_datatable(string search, Nullable<int> lop, string fromdate, string todate, Nullable<int> sort, Nullable<int> lenght, Nullable<int> start)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var lopParameter = lop.HasValue ?
                new ObjectParameter("lop", lop) :
                new ObjectParameter("lop", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_history_push_mail_datatable_Result>("get_list_history_push_mail_datatable", searchParameter, lopParameter, fromdateParameter, todateParameter, sortParameter, lenghtParameter, startParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetStudentByLeaderID(Nullable<int> leaderID)
        {
            var leaderIDParameter = leaderID.HasValue ?
                new ObjectParameter("leaderID", leaderID) :
                new ObjectParameter("leaderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetStudentByLeaderID", leaderIDParameter);
        }
    
        public virtual ObjectResult<GetListAppointmentTestRefuse_Result> GetListAppointmentTestRefuse(Nullable<int> pageindex, Nullable<int> pagesize, string search, Nullable<int> sourceID, string fromdate, string todate)
        {
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("sourceID", sourceID) :
                new ObjectParameter("sourceID", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListAppointmentTestRefuse_Result>("GetListAppointmentTestRefuse", pageindexParameter, pagesizeParameter, searchParameter, sourceIDParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<CalcSallaryByLanguage_Result> CalcSallaryByLanguage(Nullable<int> languageID)
        {
            var languageIDParameter = languageID.HasValue ?
                new ObjectParameter("languageID", languageID) :
                new ObjectParameter("languageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalcSallaryByLanguage_Result>("CalcSallaryByLanguage", languageIDParameter);
        }
    
        public virtual ObjectResult<get_list_of_student_appointment_nosearch_Result> get_list_of_student_appointment_nosearch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_student_appointment_nosearch_Result>("get_list_of_student_appointment_nosearch");
        }
    
        public virtual ObjectResult<VietCoCo_ListMeeting_Result> VietCoCo_ListMeeting(string search, Nullable<int> isRoomStart, Nullable<int> sort, string from, string to, Nullable<int> start, Nullable<int> lenght, Nullable<int> aclogID, Nullable<int> role)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var isRoomStartParameter = isRoomStart.HasValue ?
                new ObjectParameter("isRoomStart", isRoomStart) :
                new ObjectParameter("isRoomStart", typeof(int));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VietCoCo_ListMeeting_Result>("VietCoCo_ListMeeting", searchParameter, isRoomStartParameter, sortParameter, fromParameter, toParameter, startParameter, lenghtParameter, aclogIDParameter, roleParameter);
        }
    
        public virtual ObjectResult<Admin_GetTeacherByClass_Result> Admin_GetTeacherByClass(Nullable<int> @class)
        {
            var classParameter = @class.HasValue ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetTeacherByClass_Result>("Admin_GetTeacherByClass", classParameter);
        }
    
        [DbFunction("ZimEntities", "fn_StudyTimeAcceptable")]
        public virtual IQueryable<Nullable<int>> fn_StudyTimeAcceptable(Nullable<int> study_id)
        {
            var study_idParameter = study_id.HasValue ?
                new ObjectParameter("study_id", study_id) :
                new ObjectParameter("study_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[ZimEntities].[fn_StudyTimeAcceptable](@study_id)", study_idParameter);
        }
    
        [DbFunction("ZimEntities", "fn_StudyTimeNonAcceptable")]
        public virtual IQueryable<Nullable<int>> fn_StudyTimeNonAcceptable(Nullable<int> study_id)
        {
            var study_idParameter = study_id.HasValue ?
                new ObjectParameter("study_id", study_id) :
                new ObjectParameter("study_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[ZimEntities].[fn_StudyTimeNonAcceptable](@study_id)", study_idParameter);
        }
    
        public virtual ObjectResult<ReportSalaryTearcher_Result> ReportSalaryTearcher(string search, Nullable<int> tearcherID, Nullable<int> month, Nullable<int> year)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var tearcherIDParameter = tearcherID.HasValue ?
                new ObjectParameter("tearcherID", tearcherID) :
                new ObjectParameter("tearcherID", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportSalaryTearcher_Result>("ReportSalaryTearcher", searchParameter, tearcherIDParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<Admin_VideoSchedule_GetList_Result> Admin_VideoSchedule_GetList(Nullable<int> course)
        {
            var courseParameter = course.HasValue ?
                new ObjectParameter("course", course) :
                new ObjectParameter("course", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_VideoSchedule_GetList_Result>("Admin_VideoSchedule_GetList", courseParameter);
        }
    
        public virtual ObjectResult<Admin_TeacherSalary_GetListNotExists_Result> Admin_TeacherSalary_GetListNotExists()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_TeacherSalary_GetListNotExists_Result>("Admin_TeacherSalary_GetListNotExists");
        }
    
        public virtual ObjectResult<Admin_Statistical_GetValue_Result> Admin_Statistical_GetValue(Nullable<System.DateTime> starttime, Nullable<System.DateTime> endtime, Nullable<System.DateTime> prestarttime, Nullable<System.DateTime> preendtime, Nullable<int> team, Nullable<int> member)
        {
            var starttimeParameter = starttime.HasValue ?
                new ObjectParameter("starttime", starttime) :
                new ObjectParameter("starttime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var prestarttimeParameter = prestarttime.HasValue ?
                new ObjectParameter("prestarttime", prestarttime) :
                new ObjectParameter("prestarttime", typeof(System.DateTime));
    
            var preendtimeParameter = preendtime.HasValue ?
                new ObjectParameter("preendtime", preendtime) :
                new ObjectParameter("preendtime", typeof(System.DateTime));
    
            var teamParameter = team.HasValue ?
                new ObjectParameter("team", team) :
                new ObjectParameter("team", typeof(int));
    
            var memberParameter = member.HasValue ?
                new ObjectParameter("member", member) :
                new ObjectParameter("member", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Statistical_GetValue_Result>("Admin_Statistical_GetValue", starttimeParameter, endtimeParameter, prestarttimeParameter, preendtimeParameter, teamParameter, memberParameter);
        }
    
        public virtual ObjectResult<Admin_Curriculumn_LoadForCreateCourse_Result> Admin_Curriculumn_LoadForCreateCourse(Nullable<int> @class, Nullable<int> time)
        {
            var classParameter = @class.HasValue ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(int));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Curriculumn_LoadForCreateCourse_Result>("Admin_Curriculumn_LoadForCreateCourse", classParameter, timeParameter);
        }
    
        public virtual ObjectResult<get_contract_Result> get_contract(string qsearch, Nullable<int> uID)
        {
            var qsearchParameter = qsearch != null ?
                new ObjectParameter("qsearch", qsearch) :
                new ObjectParameter("qsearch", typeof(string));
    
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_contract_Result>("get_contract", qsearchParameter, uIDParameter);
        }
    
        public virtual ObjectResult<get_contract_censorship_Result> get_contract_censorship(string qsearch)
        {
            var qsearchParameter = qsearch != null ?
                new ObjectParameter("qsearch", qsearch) :
                new ObjectParameter("qsearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_contract_censorship_Result>("get_contract_censorship", qsearchParameter);
        }
    
        public virtual ObjectResult<get_list_of_AppointmentTestForStudent_Result> get_list_of_AppointmentTestForStudent(Nullable<int> aclog, Nullable<int> pageindex, Nullable<int> pagesize)
        {
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_AppointmentTestForStudent_Result>("get_list_of_AppointmentTestForStudent", aclogParameter, pageindexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<Admin_Statistical_SalerRevenue_Result> Admin_Statistical_SalerRevenue(string search, string from, string to, Nullable<int> aclog, Nullable<int> role, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Statistical_SalerRevenue_Result>("Admin_Statistical_SalerRevenue", searchParameter, fromParameter, toParameter, aclogParameter, roleParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_NotifyAcademic_Result> Admin_NotifyAcademic()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_NotifyAcademic_Result>("Admin_NotifyAcademic");
        }
    
        public virtual ObjectResult<Admin_NotifyReason_Result> Admin_NotifyReason()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_NotifyReason_Result>("Admin_NotifyReason");
        }
    
        public virtual ObjectResult<get_list_of_AppointmentTest_Result> get_list_of_AppointmentTest(string search, Nullable<int> source, Nullable<int> center, Nullable<int> support, Nullable<int> status, string fromdate, string todate, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex, Nullable<int> statusregister, Nullable<int> role, Nullable<int> aclog, Nullable<int> language)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sourceParameter = source.HasValue ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(int));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var supportParameter = support.HasValue ?
                new ObjectParameter("support", support) :
                new ObjectParameter("support", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var statusregisterParameter = statusregister.HasValue ?
                new ObjectParameter("statusregister", statusregister) :
                new ObjectParameter("statusregister", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("language", language) :
                new ObjectParameter("language", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_AppointmentTest_Result>("get_list_of_AppointmentTest", searchParameter, sourceParameter, centerParameter, supportParameter, statusParameter, fromdateParameter, todateParameter, sortParameter, pagesizeParameter, pageindexParameter, statusregisterParameter, roleParameter, aclogParameter, languageParameter);
        }
    
        public virtual ObjectResult<get_list_of_staff_Result> get_list_of_staff(string search, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_staff_Result>("get_list_of_staff", searchParameter, sortParameter, pagesizeParameter, pageindexParameter);
        }
    
        public virtual ObjectResult<Admin_GetStudentRevenueByTVV_Result> Admin_GetStudentRevenueByTVV(string search, Nullable<int> tvv, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var tvvParameter = tvv.HasValue ?
                new ObjectParameter("tvv", tvv) :
                new ObjectParameter("tvv", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetStudentRevenueByTVV_Result>("Admin_GetStudentRevenueByTVV", searchParameter, tvvParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_Student_SuccessCourseList_Result> Admin_Student_SuccessCourseList(string search, Nullable<int> searchMail, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var searchMailParameter = searchMail.HasValue ?
                new ObjectParameter("searchMail", searchMail) :
                new ObjectParameter("searchMail", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Student_SuccessCourseList_Result>("Admin_Student_SuccessCourseList", searchParameter, searchMailParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_SalaryStaff_NotConfigSalary_Result> Admin_SalaryStaff_NotConfigSalary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_SalaryStaff_NotConfigSalary_Result>("Admin_SalaryStaff_NotConfigSalary");
        }
    
        public virtual int Update_TargetRevenue(string targetid, Nullable<double> value)
        {
            var targetidParameter = targetid != null ?
                new ObjectParameter("targetid", targetid) :
                new ObjectParameter("targetid", typeof(string));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_TargetRevenue", targetidParameter, valueParameter);
        }
    
        public virtual ObjectResult<Admin_PlatformCampaign_GetList_Result> Admin_PlatformCampaign_GetList(Nullable<int> campaignId, string search, Nullable<int> start, Nullable<int> length)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("campaignId", campaignId) :
                new ObjectParameter("campaignId", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_PlatformCampaign_GetList_Result>("Admin_PlatformCampaign_GetList", campaignIdParameter, searchParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_CommitmentSold_Result> Admin_CommitmentSold(Nullable<int> targetId)
        {
            var targetIdParameter = targetId.HasValue ?
                new ObjectParameter("targetId", targetId) :
                new ObjectParameter("targetId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_CommitmentSold_Result>("Admin_CommitmentSold", targetIdParameter);
        }
    
        public virtual ObjectResult<Admin_SalaryReview_GetList_Result> Admin_SalaryReview_GetList(Nullable<int> campaignId, string search, Nullable<int> start, Nullable<int> length)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("campaignId", campaignId) :
                new ObjectParameter("campaignId", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_SalaryReview_GetList_Result>("Admin_SalaryReview_GetList", campaignIdParameter, searchParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_RevenueRank_GetList_Result> Admin_RevenueRank_GetList(Nullable<int> campaignId, Nullable<int> teamId, Nullable<int> rankType, Nullable<int> targetType)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("campaignId", campaignId) :
                new ObjectParameter("campaignId", typeof(int));
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("teamId", teamId) :
                new ObjectParameter("teamId", typeof(int));
    
            var rankTypeParameter = rankType.HasValue ?
                new ObjectParameter("rankType", rankType) :
                new ObjectParameter("rankType", typeof(int));
    
            var targetTypeParameter = targetType.HasValue ?
                new ObjectParameter("targetType", targetType) :
                new ObjectParameter("targetType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_RevenueRank_GetList_Result>("Admin_RevenueRank_GetList", campaignIdParameter, teamIdParameter, rankTypeParameter, targetTypeParameter);
        }
    
        [DbFunction("ZimEntities", "STRING_SPLIT")]
        public virtual IQueryable<string> STRING_SPLIT(string @string, string separator)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var separatorParameter = separator != null ?
                new ObjectParameter("separator", separator) :
                new ObjectParameter("separator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[ZimEntities].[STRING_SPLIT](@string, @separator)", stringParameter, separatorParameter);
        }
    
        public virtual int get_bagde_notification1(Nullable<int> roleID, Nullable<int> location, Nullable<int> supportID, Nullable<int> aclogID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var supportIDParameter = supportID.HasValue ?
                new ObjectParameter("supportID", supportID) :
                new ObjectParameter("supportID", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_bagde_notification1", roleIDParameter, locationParameter, supportIDParameter, aclogIDParameter);
        }
    
        public virtual ObjectResult<Admin_TargetBonus_GetList_Result> Admin_TargetBonus_GetList(Nullable<int> campaignid, Nullable<int> type, Nullable<int> start, Nullable<int> length)
        {
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_TargetBonus_GetList_Result>("Admin_TargetBonus_GetList", campaignidParameter, typeParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Admin_GetTotalRevenue(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Admin_GetTotalRevenue", uidParameter);
        }
    
        public virtual ObjectResult<Admin_Account_GetHasTargetInCampaign_Result> Admin_Account_GetHasTargetInCampaign(Nullable<int> campaignId)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("campaignId", campaignId) :
                new ObjectParameter("campaignId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Account_GetHasTargetInCampaign_Result>("Admin_Account_GetHasTargetInCampaign", campaignIdParameter);
        }
    
        public virtual ObjectResult<Admin_Course_GetByAppoitment_Result> Admin_Course_GetByAppoitment(Nullable<int> appoitment)
        {
            var appoitmentParameter = appoitment.HasValue ?
                new ObjectParameter("appoitment", appoitment) :
                new ObjectParameter("appoitment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Course_GetByAppoitment_Result>("Admin_Course_GetByAppoitment", appoitmentParameter);
        }
    
        public virtual ObjectResult<Admin_CourseSchedule_GetList_Result> Admin_CourseSchedule_GetList(Nullable<int> course)
        {
            var courseParameter = course.HasValue ?
                new ObjectParameter("course", course) :
                new ObjectParameter("course", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_CourseSchedule_GetList_Result>("Admin_CourseSchedule_GetList", courseParameter);
        }
    
        public virtual ObjectResult<Admin_Program_GetByAppoitment_Result> Admin_Program_GetByAppoitment(Nullable<int> appoitment)
        {
            var appoitmentParameter = appoitment.HasValue ?
                new ObjectParameter("appoitment", appoitment) :
                new ObjectParameter("appoitment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Program_GetByAppoitment_Result>("Admin_Program_GetByAppoitment", appoitmentParameter);
        }
    
        public virtual ObjectResult<Admin_Teacher_GetAvailable_Result> Admin_Teacher_GetAvailable(Nullable<int> teacherid, Nullable<int> courseid, Nullable<int> programid, Nullable<int> studytimeid, string date)
        {
            var teacheridParameter = teacherid.HasValue ?
                new ObjectParameter("teacherid", teacherid) :
                new ObjectParameter("teacherid", typeof(int));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            var programidParameter = programid.HasValue ?
                new ObjectParameter("programid", programid) :
                new ObjectParameter("programid", typeof(int));
    
            var studytimeidParameter = studytimeid.HasValue ?
                new ObjectParameter("studytimeid", studytimeid) :
                new ObjectParameter("studytimeid", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Teacher_GetAvailable_Result>("Admin_Teacher_GetAvailable", teacheridParameter, courseidParameter, programidParameter, studytimeidParameter, dateParameter);
        }
    
        public virtual ObjectResult<Admin_Seller_GetList_Result> Admin_Seller_GetList(string search, Nullable<int> sort, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Seller_GetList_Result>("Admin_Seller_GetList", searchParameter, sortParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<CoursesSchedule_GetNotAttendance_Result> CoursesSchedule_GetNotAttendance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CoursesSchedule_GetNotAttendance_Result>("CoursesSchedule_GetNotAttendance");
        }
    
        public virtual int get_bagde_notification2(Nullable<int> roleID, Nullable<int> location, Nullable<int> supportID, Nullable<int> aclogID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var supportIDParameter = supportID.HasValue ?
                new ObjectParameter("supportID", supportID) :
                new ObjectParameter("supportID", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_bagde_notification2", roleIDParameter, locationParameter, supportIDParameter, aclogIDParameter);
        }
    
        public virtual ObjectResult<Admin_TeacherSalary_GetList_Result> Admin_TeacherSalary_GetList(Nullable<int> course, Nullable<int> teacher, Nullable<int> month, Nullable<int> year, Nullable<int> start, Nullable<int> length)
        {
            var courseParameter = course.HasValue ?
                new ObjectParameter("course", course) :
                new ObjectParameter("course", typeof(int));
    
            var teacherParameter = teacher.HasValue ?
                new ObjectParameter("teacher", teacher) :
                new ObjectParameter("teacher", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_TeacherSalary_GetList_Result>("Admin_TeacherSalary_GetList", courseParameter, teacherParameter, monthParameter, yearParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<get_list_of_student_has_tvv_leave_Result> get_list_of_student_has_tvv_leave(string search, Nullable<int> pagesize, Nullable<int> pageindex)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_student_has_tvv_leave_Result>("get_list_of_student_has_tvv_leave", searchParameter, pagesizeParameter, pageindexParameter);
        }
    
        public virtual ObjectResult<GetTeacherHasSchedule_Result> GetTeacherHasSchedule(string search, string fromdate, string todate, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeacherHasSchedule_Result>("GetTeacherHasSchedule", searchParameter, fromdateParameter, todateParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<GetCourseByTeacherAndSchedule_Result> GetCourseByTeacherAndSchedule(Nullable<int> teacherId, string courseName, string fromdate, string todate, Nullable<int> start, Nullable<int> length)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("teacherId", teacherId) :
                new ObjectParameter("teacherId", typeof(int));
    
            var courseNameParameter = courseName != null ?
                new ObjectParameter("courseName", courseName) :
                new ObjectParameter("courseName", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseByTeacherAndSchedule_Result>("GetCourseByTeacherAndSchedule", teacherIdParameter, courseNameParameter, fromdateParameter, todateParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_TeacherSalaryDetail_GetList_Result> Admin_TeacherSalaryDetail_GetList(string starttime, string endtime, Nullable<int> teacher, Nullable<int> course, Nullable<int> start, Nullable<int> length)
        {
            var starttimeParameter = starttime != null ?
                new ObjectParameter("starttime", starttime) :
                new ObjectParameter("starttime", typeof(string));
    
            var endtimeParameter = endtime != null ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(string));
    
            var teacherParameter = teacher.HasValue ?
                new ObjectParameter("teacher", teacher) :
                new ObjectParameter("teacher", typeof(int));
    
            var courseParameter = course.HasValue ?
                new ObjectParameter("course", course) :
                new ObjectParameter("course", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_TeacherSalaryDetail_GetList_Result>("Admin_TeacherSalaryDetail_GetList", starttimeParameter, endtimeParameter, teacherParameter, courseParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Get_RolesAndLanguage_Result> Get_RolesAndLanguage(string role, string teacherType)
        {
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var teacherTypeParameter = teacherType != null ?
                new ObjectParameter("teacherType", teacherType) :
                new ObjectParameter("teacherType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_RolesAndLanguage_Result>("Get_RolesAndLanguage", roleParameter, teacherTypeParameter);
        }
    
        public virtual ObjectResult<get_list_of_student_appointment_Result> get_list_of_student_appointment(string search, Nullable<int> lop, Nullable<int> ca, string fromdate, string todate, Nullable<int> pagesize, Nullable<int> pageindex, Nullable<int> aclogID, Nullable<int> role, Nullable<int> language)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var lopParameter = lop.HasValue ?
                new ObjectParameter("lop", lop) :
                new ObjectParameter("lop", typeof(int));
    
            var caParameter = ca.HasValue ?
                new ObjectParameter("ca", ca) :
                new ObjectParameter("ca", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("language", language) :
                new ObjectParameter("language", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_student_appointment_Result>("get_list_of_student_appointment", searchParameter, lopParameter, caParameter, fromdateParameter, todateParameter, pagesizeParameter, pageindexParameter, aclogIDParameter, roleParameter, languageParameter);
        }
    
        public virtual ObjectResult<RevenueDetail_GetList_Result> RevenueDetail_GetList(string search, Nullable<int> counselors, string fd, string td, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var counselorsParameter = counselors.HasValue ?
                new ObjectParameter("counselors", counselors) :
                new ObjectParameter("counselors", typeof(int));
    
            var fdParameter = fd != null ?
                new ObjectParameter("fd", fd) :
                new ObjectParameter("fd", typeof(string));
    
            var tdParameter = td != null ?
                new ObjectParameter("td", td) :
                new ObjectParameter("td", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RevenueDetail_GetList_Result>("RevenueDetail_GetList", searchParameter, counselorsParameter, fdParameter, tdParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Get_ListTeacherSalaryIsReject_Result> Get_ListTeacherSalaryIsReject(Nullable<int> courseId, Nullable<int> teacherId, string fromDate, string toDate, Nullable<int> start, Nullable<int> length)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(int));
    
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("teacherId", teacherId) :
                new ObjectParameter("teacherId", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_ListTeacherSalaryIsReject_Result>("Get_ListTeacherSalaryIsReject", courseIdParameter, teacherIdParameter, fromDateParameter, toDateParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_HistoryAttendance_GetList_Result> Admin_HistoryAttendance_GetList(Nullable<int> courseId, string fromdate, string todate, Nullable<int> start, Nullable<int> length)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_HistoryAttendance_GetList_Result>("Admin_HistoryAttendance_GetList", courseIdParameter, fromdateParameter, todateParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_HistoryUploadVideo_GetList_Result> Admin_HistoryUploadVideo_GetList(Nullable<int> courseId, string fromdate, string todate, Nullable<int> start, Nullable<int> length)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_HistoryUploadVideo_GetList_Result>("Admin_HistoryUploadVideo_GetList", courseIdParameter, fromdateParameter, todateParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<getallcustomernew_Result> getallcustomernew(string search, Nullable<int> status, Nullable<int> study, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var studyParameter = study.HasValue ?
                new ObjectParameter("study", study) :
                new ObjectParameter("study", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getallcustomernew_Result>("getallcustomernew", searchParameter, statusParameter, studyParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<GetAttendanceByCourseAndStudent_Result> GetAttendanceByCourseAndStudent(Nullable<int> student, Nullable<int> course)
        {
            var studentParameter = student.HasValue ?
                new ObjectParameter("student", student) :
                new ObjectParameter("student", typeof(int));
    
            var courseParameter = course.HasValue ?
                new ObjectParameter("course", course) :
                new ObjectParameter("course", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAttendanceByCourseAndStudent_Result>("GetAttendanceByCourseAndStudent", studentParameter, courseParameter);
        }
    
        public virtual ObjectResult<get_list_of_invoice_Result> get_list_of_invoice(string search, Nullable<int> center, string fromdate, string todate, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex, Nullable<int> aclogID, Nullable<int> roleId)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_invoice_Result>("get_list_of_invoice", searchParameter, centerParameter, fromdateParameter, todateParameter, sortParameter, pagesizeParameter, pageindexParameter, aclogIDParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<Admin_Seller_GetListMember_Result> Admin_Seller_GetListMember(Nullable<int> userId, Nullable<int> start, Nullable<int> lenght)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Seller_GetListMember_Result>("Admin_Seller_GetListMember", userIdParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<Teacher_GetListFeedback_Result> Teacher_GetListFeedback(Nullable<int> aclog, Nullable<int> start, Nullable<int> length, Nullable<int> course)
        {
            var aclogParameter = aclog.HasValue ?
                new ObjectParameter("aclog", aclog) :
                new ObjectParameter("aclog", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            var courseParameter = course.HasValue ?
                new ObjectParameter("course", course) :
                new ObjectParameter("course", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Teacher_GetListFeedback_Result>("Teacher_GetListFeedback", aclogParameter, startParameter, lengthParameter, courseParameter);
        }
    
        public virtual ObjectResult<get_list_of_CustomerReserve_Result> get_list_of_CustomerReserve(string search, Nullable<int> lop, string fromdate, string todate, Nullable<int> start, Nullable<int> length, Nullable<int> aclogId, Nullable<int> roleId)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var lopParameter = lop.HasValue ?
                new ObjectParameter("lop", lop) :
                new ObjectParameter("lop", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            var aclogIdParameter = aclogId.HasValue ?
                new ObjectParameter("aclogId", aclogId) :
                new ObjectParameter("aclogId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_CustomerReserve_Result>("get_list_of_CustomerReserve", searchParameter, lopParameter, fromdateParameter, todateParameter, startParameter, lengthParameter, aclogIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<API_Student_Dashboard_Result> API_Student_Dashboard(Nullable<int> studentid, string fdate, string tdate)
        {
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Student_Dashboard_Result>("API_Student_Dashboard", studentidParameter, fdateParameter, tdateParameter);
        }
    
        public virtual ObjectResult<API_Teacher_Dashboard_Result> API_Teacher_Dashboard(Nullable<int> teacherid, string fdate, string tdate)
        {
            var teacheridParameter = teacherid.HasValue ?
                new ObjectParameter("teacherid", teacherid) :
                new ObjectParameter("teacherid", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Teacher_Dashboard_Result>("API_Teacher_Dashboard", teacheridParameter, fdateParameter, tdateParameter);
        }
    
        public virtual ObjectResult<Admin_TeacherSalaryApproved_GetList_Result> Admin_TeacherSalaryApproved_GetList(Nullable<int> teacherId, Nullable<int> month, Nullable<int> year, Nullable<int> start, Nullable<int> length)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("teacherId", teacherId) :
                new ObjectParameter("teacherId", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_TeacherSalaryApproved_GetList_Result>("Admin_TeacherSalaryApproved_GetList", teacherIdParameter, monthParameter, yearParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_Student_3LessonsLeftList_Result> Admin_Student_3LessonsLeftList(string search, Nullable<int> searchMail, Nullable<int> start, Nullable<int> length, Nullable<int> aclogID, Nullable<int> roleId)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var searchMailParameter = searchMail.HasValue ?
                new ObjectParameter("searchMail", searchMail) :
                new ObjectParameter("searchMail", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Student_3LessonsLeftList_Result>("Admin_Student_3LessonsLeftList", searchParameter, searchMailParameter, startParameter, lengthParameter, aclogIDParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<Admin_RevenueDetail_GetByTarget_Result> Admin_RevenueDetail_GetByTarget(Nullable<int> uid, Nullable<int> campaignId, Nullable<int> start, Nullable<int> length)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("campaignId", campaignId) :
                new ObjectParameter("campaignId", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_RevenueDetail_GetByTarget_Result>("Admin_RevenueDetail_GetByTarget", uidParameter, campaignIdParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<get_list_of_changecourse_Result> get_list_of_changecourse(string search, Nullable<int> center, string fromdate, string todate, Nullable<int> sort, Nullable<int> pagesize, Nullable<int> pageindex)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centerParameter = center.HasValue ?
                new ObjectParameter("center", center) :
                new ObjectParameter("center", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_changecourse_Result>("get_list_of_changecourse", searchParameter, centerParameter, fromdateParameter, todateParameter, sortParameter, pagesizeParameter, pageindexParameter);
        }
    
        public virtual ObjectResult<ContractTeacer_GetList_Result> ContractTeacer_GetList(Nullable<int> teacher, Nullable<int> sort, Nullable<int> start, Nullable<int> length)
        {
            var teacherParameter = teacher.HasValue ?
                new ObjectParameter("teacher", teacher) :
                new ObjectParameter("teacher", typeof(int));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ContractTeacer_GetList_Result>("ContractTeacer_GetList", teacherParameter, sortParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<getCustomerInCourse_Result> getCustomerInCourse(string search, Nullable<int> program, Nullable<int> start, Nullable<int> length, Nullable<int> tvv)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var programParameter = program.HasValue ?
                new ObjectParameter("program", program) :
                new ObjectParameter("program", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            var tvvParameter = tvv.HasValue ?
                new ObjectParameter("tvv", tvv) :
                new ObjectParameter("tvv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCustomerInCourse_Result>("getCustomerInCourse", searchParameter, programParameter, startParameter, lengthParameter, tvvParameter);
        }
    
        public virtual ObjectResult<get_list_of_course_Result> get_list_of_course(string search, Nullable<int> school, Nullable<int> lop, Nullable<int> teacher, string fromdate, string todate, Nullable<int> pagesize, Nullable<int> pageindex)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var schoolParameter = school.HasValue ?
                new ObjectParameter("school", school) :
                new ObjectParameter("school", typeof(int));
    
            var lopParameter = lop.HasValue ?
                new ObjectParameter("lop", lop) :
                new ObjectParameter("lop", typeof(int));
    
            var teacherParameter = teacher.HasValue ?
                new ObjectParameter("teacher", teacher) :
                new ObjectParameter("teacher", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_list_of_course_Result>("get_list_of_course", searchParameter, schoolParameter, lopParameter, teacherParameter, fromdateParameter, todateParameter, pagesizeParameter, pageindexParameter);
        }
    
        public virtual int Admin_GetScoreByCurriculum1(Nullable<int> courseid)
        {
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_GetScoreByCurriculum1", courseidParameter);
        }
    
        public virtual int Admin_TeacherSalary_GetListNotExists1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_TeacherSalary_GetListNotExists1");
        }
    
        public virtual int ASW_CampaignSale_ExportExcel1(string search, Nullable<int> sort, Nullable<int> isHide)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var isHideParameter = isHide.HasValue ?
                new ObjectParameter("isHide", isHide) :
                new ObjectParameter("isHide", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ASW_CampaignSale_ExportExcel1", searchParameter, sortParameter, isHideParameter);
        }
    
        public virtual int get_bagde_notification3(Nullable<int> roleID, Nullable<int> location, Nullable<int> supportID, Nullable<int> aclogID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var supportIDParameter = supportID.HasValue ?
                new ObjectParameter("supportID", supportID) :
                new ObjectParameter("supportID", typeof(int));
    
            var aclogIDParameter = aclogID.HasValue ?
                new ObjectParameter("aclogID", aclogID) :
                new ObjectParameter("aclogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_bagde_notification3", roleIDParameter, locationParameter, supportIDParameter, aclogIDParameter);
        }
    
        public virtual int ReportSalaryTearcher1(string search, Nullable<int> tearcherID, Nullable<int> month, Nullable<int> year)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var tearcherIDParameter = tearcherID.HasValue ?
                new ObjectParameter("tearcherID", tearcherID) :
                new ObjectParameter("tearcherID", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSalaryTearcher1", searchParameter, tearcherIDParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<Admin_StatisticsTeacherSalaryApproved_GetList_Result> Admin_StatisticsTeacherSalaryApproved_GetList(Nullable<int> teacherId, Nullable<int> year)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("teacherId", teacherId) :
                new ObjectParameter("teacherId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_StatisticsTeacherSalaryApproved_GetList_Result>("Admin_StatisticsTeacherSalaryApproved_GetList", teacherIdParameter, yearParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Admin_GetRevenueBySellerId(Nullable<int> sellerId)
        {
            var sellerIdParameter = sellerId.HasValue ?
                new ObjectParameter("sellerId", sellerId) :
                new ObjectParameter("sellerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Admin_GetRevenueBySellerId", sellerIdParameter);
        }
    
        public virtual ObjectResult<Admin_Target_GetParentTarget_Result> Admin_Target_GetParentTarget(string targetId)
        {
            var targetIdParameter = targetId != null ?
                new ObjectParameter("targetId", targetId) :
                new ObjectParameter("targetId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Target_GetParentTarget_Result>("Admin_Target_GetParentTarget", targetIdParameter);
        }
    
        public virtual ObjectResult<Admin_Target_LoadByCampaignId_Result> Admin_Target_LoadByCampaignId(string search, Nullable<int> campaignId)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("campaignId", campaignId) :
                new ObjectParameter("campaignId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Target_LoadByCampaignId_Result>("Admin_Target_LoadByCampaignId", searchParameter, campaignIdParameter);
        }
    
        public virtual ObjectResult<Admin_Target_GetByYearCampaign_Result> Admin_Target_GetByYearCampaign(string stime, string etime)
        {
            var stimeParameter = stime != null ?
                new ObjectParameter("stime", stime) :
                new ObjectParameter("stime", typeof(string));
    
            var etimeParameter = etime != null ?
                new ObjectParameter("etime", etime) :
                new ObjectParameter("etime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Target_GetByYearCampaign_Result>("Admin_Target_GetByYearCampaign", stimeParameter, etimeParameter);
        }
    
        public virtual ObjectResult<API_Student_getListCourse_Result> API_Student_getListCourse(Nullable<int> studentid)
        {
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Student_getListCourse_Result>("API_Student_getListCourse", studentidParameter);
        }
    
        public virtual ObjectResult<API_getListTeacherCourses_Result> API_getListTeacherCourses(Nullable<int> teacherid, string search, Nullable<int> centerid, Nullable<int> classid, Nullable<int> status, string fdate, string tdate, Nullable<int> sort, Nullable<int> start, Nullable<int> length)
        {
            var teacheridParameter = teacherid.HasValue ?
                new ObjectParameter("teacherid", teacherid) :
                new ObjectParameter("teacherid", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var centeridParameter = centerid.HasValue ?
                new ObjectParameter("centerid", centerid) :
                new ObjectParameter("centerid", typeof(int));
    
            var classidParameter = classid.HasValue ?
                new ObjectParameter("classid", classid) :
                new ObjectParameter("classid", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var tdateParameter = tdate != null ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_getListTeacherCourses_Result>("API_getListTeacherCourses", teacheridParameter, searchParameter, centeridParameter, classidParameter, statusParameter, fdateParameter, tdateParameter, sortParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_COD_GetList_Result> Admin_COD_GetList(string search, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_COD_GetList_Result>("Admin_COD_GetList", searchParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_MoneyReceiver_GetList_Result> Admin_MoneyReceiver_GetList(string search, Nullable<int> sort, Nullable<int> sorttype, Nullable<int> pagesize, Nullable<int> pageindex)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var sorttypeParameter = sorttype.HasValue ?
                new ObjectParameter("sorttype", sorttype) :
                new ObjectParameter("sorttype", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_MoneyReceiver_GetList_Result>("Admin_MoneyReceiver_GetList", searchParameter, sortParameter, sorttypeParameter, pagesizeParameter, pageindexParameter);
        }
    
        public virtual ObjectResult<API_GetExistsVideoSchedule_Result> API_GetExistsVideoSchedule(Nullable<int> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("courseID", courseID) :
                new ObjectParameter("courseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_GetExistsVideoSchedule_Result>("API_GetExistsVideoSchedule", courseIDParameter);
        }
    
        public virtual ObjectResult<ASW_Teacher_List_Result> ASW_Teacher_List(string search, Nullable<int> language, Nullable<int> sort, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("language", language) :
                new ObjectParameter("language", typeof(int));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_Teacher_List_Result>("ASW_Teacher_List", searchParameter, languageParameter, sortParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<Admin_SalarySetting_NotConfigSalary_Result> Admin_SalarySetting_NotConfigSalary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_SalarySetting_NotConfigSalary_Result>("Admin_SalarySetting_NotConfigSalary");
        }
    
        public virtual ObjectResult<ASW_Staff_Salary_Result> ASW_Staff_Salary(string search, Nullable<int> sort, Nullable<int> type, Nullable<int> start, Nullable<int> lenght)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lenghtParameter = lenght.HasValue ?
                new ObjectParameter("lenght", lenght) :
                new ObjectParameter("lenght", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASW_Staff_Salary_Result>("ASW_Staff_Salary", searchParameter, sortParameter, typeParameter, startParameter, lenghtParameter);
        }
    
        public virtual ObjectResult<Admin_StaffOfPosition_GetList_Result> Admin_StaffOfPosition_GetList(string search, Nullable<int> positionId, Nullable<int> sort, Nullable<int> sorttype, Nullable<int> pagesize, Nullable<int> pageindex)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("positionId", positionId) :
                new ObjectParameter("positionId", typeof(int));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(int));
    
            var sorttypeParameter = sorttype.HasValue ?
                new ObjectParameter("sorttype", sorttype) :
                new ObjectParameter("sorttype", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_StaffOfPosition_GetList_Result>("Admin_StaffOfPosition_GetList", searchParameter, positionIdParameter, sortParameter, sorttypeParameter, pagesizeParameter, pageindexParameter);
        }
    
        public virtual ObjectResult<Admin_GetRevenueOfSellerByCampaignId_Result> Admin_GetRevenueOfSellerByCampaignId(string campaignId)
        {
            var campaignIdParameter = campaignId != null ?
                new ObjectParameter("campaignId", campaignId) :
                new ObjectParameter("campaignId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetRevenueOfSellerByCampaignId_Result>("Admin_GetRevenueOfSellerByCampaignId", campaignIdParameter);
        }
    
        public virtual ObjectResult<Admin_GetLevelDownInMonth_Result> Admin_GetLevelDownInMonth(Nullable<int> month, Nullable<int> status, Nullable<int> supportId)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var supportIdParameter = supportId.HasValue ?
                new ObjectParameter("supportId", supportId) :
                new ObjectParameter("supportId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetLevelDownInMonth_Result>("Admin_GetLevelDownInMonth", monthParameter, statusParameter, supportIdParameter);
        }
    
        public virtual ObjectResult<Admin_ApprovalToLevelDown_GetList_Result> Admin_ApprovalToLevelDown_GetList(string search, string from, string to, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_ApprovalToLevelDown_GetList_Result>("Admin_ApprovalToLevelDown_GetList", searchParameter, fromParameter, toParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_ApprovalToLevelUp_GetList_Result> Admin_ApprovalToLevelUp_GetList(string search, string from, string to, Nullable<int> start, Nullable<int> length)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_ApprovalToLevelUp_GetList_Result>("Admin_ApprovalToLevelUp_GetList", searchParameter, fromParameter, toParameter, startParameter, lengthParameter);
        }
    
        public virtual ObjectResult<Admin_GetCampaignsInYear_Result> Admin_GetCampaignsInYear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetCampaignsInYear_Result>("Admin_GetCampaignsInYear");
        }
    }
}
