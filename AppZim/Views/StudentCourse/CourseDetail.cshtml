@using AppZim.TableSql;
@using MB.Extensions;
@{
    /**/

    ViewBag.Title = "StudentCourseDetail";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdminNew.cshtml";
    var schs = CoursesScheduleTable.getbycourseid(Model.ID);

    var totalLesson = CoursesScheduleTable.getbycourseid(Model.ID).Count;//tổng buổi học
    var learnedLesson = CoursesScheduleTable.GetByCourseAndStatus(Model.ID, 1).Count;// số buổi đã học
    int remainLesson = totalLesson - learnedLesson;
}

@section myStyles{
    <link href="~/app-assets/zimv2/lib/fullcalendar/fullcalendar.min.css" rel="stylesheet">
    <style>
        .fc-time-grid .fc-slats td {
            height: 3.5em;
        }
    </style>
}

<div class="row">
    <div class="col-12 col-sm-12 col-md-12 col-xl-3">
        <div class="navigator">
            <div class="card-body pd-0">
                <label class="tx-uppercase tx-sans tx-15 tx-medium tx-spacing-1 mg-b-15 btn-name">@Model.CourseName <button class="btn btn-remain" data-toggle="tooltip" data-placement="left" title="Số buổi đã học">@learnedLesson</button><button class="btn btn-success" data-toggle="tooltip" data-placement="left" title="Số buổi học còn lại" style="margin-left:5px;">@remainLesson</button><button class="btn btn-total" data-toggle="tooltip" data-placement="left" title="Tổng số buổi học">@totalLesson</button></label>
                <ul class="list-menu">
                    <li class="menu-item active">
                        <a href="@Url.Action("CourseDetail", "StudentCourse", new { area = "", Model.ID })" class="menu-link"><i data-feather="calendar"></i>Lịch học</a>
                    </li>
                    <li class="menu-item">
                        <a href="@Url.Action("CourseDocument", "StudentCourse", new { area = "", id = Model.ID })" class="menu-link"><i data-feather="book"></i>Tài liệu</a>
                    </li>
                    <li class="menu-item">
                        <a href="@Url.Action("NoteCourse", "StudentCourse", new { area = "", id = Model.ID })" class="menu-link"><i data-feather="flag"></i>TimeLine</a>
                    </li>
                    <li class="menu-item">
                        <a href="@Url.Action("CourseNotification","StudentCourse",  new { area = "", id = Model.ID })" class="menu-link"><i data-feather="bell"></i>Thông báo</a>
                    </li>
                    <li class="menu-item">
                        <a href="@Url.Action("VideoCourse","StudentCourse",  new { area = "", id = Model.ID })" class="menu-link"><i data-feather="video"></i>Video buổi học</a>
                    </li>
                    <li class="menu-item">
                        <a href="@Url.Action("TeacherCourse","StudentCourse",  new { area = "", id = Model.ID })" class="menu-link"><i data-feather="user"></i>Giáo viên</a>
                    </li>
                    @*@{
                        var courseStudent = CoursesStudentTable.getbyCourseIDdandStudentID(Model.ID, Session["UID"].ToString().ToInt(0));
                        if (courseStudent != null)
                        {
                            var contract = ContractCustomerTable.getbycoursestudentid(courseStudent.ID);
                            if (contract != null)
                            {
                                if (contract.Status == 2)
                                {
                                    <li class="menu-item">
                                        <a target="_blank" href="@Url.Action("PrintContract","Contract",new { area="admin",code=contract.CodeCheck})" class="menu-link"><i data-feather="file-text"></i>Hợp đồng</a>
                                    </li>
                                }
                            }
                        }

                    }*@
                </ul>
            </div>
        </div>
        @{Html.RenderAction("PartialNextLession", "StudentCourse", new { id = Model.ID });}
    </div>
    <div class="col-12 colsm-12 col-md-12 col-xl-9">
        <div id="schedule-calendar" class="schedule-calendar"></div>
    </div>
</div>
<div class="modal fade" id="div-feedback" tabindex="-1" role="dialog" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered wd-sm-500" role="document">
        <div class="modal-content">
            <input name="hdfID" type="hidden" />
            <div class="modal-body pd-20 pd-sm-40">
                <a href="" role="button" class="close pos-absolute t-15 r-15" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </a>
                <div>
                    <h4>Phản hồi về buổi học</h4>
                    <div class="form-group">
                        <input type="hidden" name="feedback" value="0">
                        <input type="hidden" name="schedule">
                        <div class="form-group custom-row">
                            <label>Tình trạng buổi học</label>
                            <select class="custom-select form-control" name="slStatus">
                                <option value="0">Tốt</option>
                                <option value="1">Giáo viên vắng mặt</option>
                                <option value="2">Mất mạng/ mất điện</option>
                            </select>
                        </div>
                        <div class="form-group custom-row">
                            <label key="class">Nội dung phản hồi</label>
                            <textarea class="form-control" name="feedbackcontent" type="text"></textarea>
                        </div>
                        <button type="button" id="btn-add" class="btn btn-primary btn-block"><i class="fas fa-check"></i> Lưu</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section myScripts{
    <script src="~/app-assets/zimv2/lib/moment/min/moment.min.js"></script>
    <script src="~/app-assets/zimv2/lib/fullcalendar/fullcalendar.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initialize fullCalendar
            // Calendar Event Source
            var curYear = moment().format('YYYY');
            var curMonth = moment().format('MM');
            var calendarEvents = {
                id: 1,
                backgroundColor: '#f7f7f7',
                borderColor: 'transparent',
                events: [

                ]
            };

            var DK = $('#schedule-calendar').fullCalendar({
                height: 'parent',
                eventLimit: false,
                timeFormat: 'HH:mm',
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay,listWeek'
                },
                navLinks: true,
                slotEventOverlap: false,
                selectable: false,
                displayEventEnd: true,
                selectLongPressDelay: 100,
                editable: false,
                nowIndicator: true,
                defaultView: 'listMonth',
                views: {
                    agenda: {
                        columnHeaderHtml: function (mom) {
                            return '<span>' + mom.format('ddd') + '</span>' + ' ' +
                                '<span>' + mom.format('DD') + '</span>';
                        }
                    },
                    day: { columnHeader: false },
                    listMonth: {
                        listDayFormat: 'ddd DD',
                        listDayAltFormat: false
                    },
                    listWeek: {
                        listDayFormat: 'ddd DD',
                        listDayAltFormat: false
                    },
                    agendaThreeDay: {
                        type: 'agenda',
                        duration: { days: 3 },
                        titleFormat: 'MMMM YYYY'
                    }
                },
                events: calendarEvents,
                eventAfterAllRender: function (view) {
                    if (view.name === 'listMonth' || view.name === 'listWeek') {
                        var dates = view.el.find('.fc-list-heading-main');
                        dates.each(function () {
                            var text = $(this).text().split(' ');
                            var now = moment().format('DD');

                            $(this).html(text[0] + '<span>' + text[1] + '</span>');
                            if (now === text[1]) { $(this).addClass('now'); }
                        });
                    }
                },
                eventRender: function (event, element) {
                    if (event.info) {
                        if (element.find('.fc-list-item-title').length > 0) {
                            element.find('.fc-list-item-title').append(
                                `<div class="box-info">
                                <p class="txt">${event.info.teacher}</p>
                                <p class="txt"><span class="subject">${event.info.subject}</span></p>
                            </div> `);
                        } else {
                            element.append(
                                `<div class="box-info">
                                    <p class="txt">${event.info.teacher}</p>
                                    <p class="txt"><span class="subject">${event.info.subject}</span></p>
                                </div>`
                            );
                        }

                    }
                    var eBorderColor = (event.source.borderColor) ? event.info.borderColor : 'rgb(247, 247, 247)';
                    element.find('.fc-event-dot').css('backgroundColor', eBorderColor)
                    element.css('borderLeft', `2px solid ${eBorderColor}`);
                },
                eventClick: function (event, jsEvent, view) {
                    const today = new Date();
                    if ((moment(today).format('YYYY-MM-DD HH:mm:ss') > moment(event.end._i).format('YYYY-MM-DD HH:mm:ss'))) {
                        console.log(event.info.id);
                                $.ajax({
                                    type: "POST",
                                    url: "/StudentCourse/LoadFeedbackSchedule",
                                    data: '{"schedule":"' + event.info.id + '"}',
                                    contentType: "application/json",
                                    success: function (doc) {
                                        if (doc.rs) {
                                            $('input[name=feedback]').val(doc.fb.ID);
                                            $('select[name=slStatus]').val(doc.fb.ScheduleStatus);
                                            $('select[name=slStatus]').trigger('change');
                                            $('textarea[name=feedbackcontent]').val(doc.fb.FeedbackContent);
                                        }
                                        $('input[name=schedule]').val(event.info.id);
                                        $('#div-feedback').modal();
                                    },
                                    error: function (xmlhttprequest, textstatus, errorthrow) {
                                        console.log(errorthrow);
                                    }
                                });
                        }
                },
            });
            shedule();
            function shedule() {
                DK.fullCalendar('removeEvents');
                $.ajax({
                    type: "POST",
                    url: "/Admin/CourseDetail/LoadScheduleCourse",
                      data: '{id:  ' + @Model.ID + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) {
                        if (msg.rs == false) {
                            toast.create({
                                title: 'Thông báo!',
                                text: 'Không có dữ liệu',
                                icon: 'notifications_active',
                                classBackground: 'noti-warning',
                                timeout: 4000
                            })
                        }
                        else {
                            m = msg.m;
                            var events = [];

                            console.log(msg.l);
                            for (var i = 0; i < msg.l.length; i++) {
                                var startDate = $.fullCalendar.moment(msg.l[i].start).format();
                                var endDate = $.fullCalendar.moment(msg.l[i].end).format();
                                var allDate = msg.l[i].allDay;
                                var url = msg.l[i].url;
                                var borderColor = msg.l[i].borderColor;
                                var subject = msg.l[i].subject;
                                var teacher = msg.l[i].teacher;
                                var branch = msg.l[i].school;
                                var room = msg.l[i].room;
                                var id = msg.l[i].id;
                                var event = {
                                    allDay: allDate,
                                    start: startDate,
                                    end: endDate,
                                    info: {
                                        id: id,
                                        room: room,
                                        teacher: teacher,
                                        branch: branch,
                                        subject: subject,
                                        borderColor: borderColor
                                    },
                                    url: url,
                                }
                                events.push(event);

                            }

                            calendarEvents.events = events;
                            DK.fullCalendar('addEventSource', calendarEvents);
                        }

                    },
                    error: function (xmlhttprequest, textstatus, errorthrow) {
                        console.log("Có lỗi rồi NA ơi :) ");
                    }
                });
            }

            var calendar = $('#schedule-calendar').fullCalendar('getCalendar');
            // change view to week when in tablet
            if (window.matchMedia('(min-width: 576px)').matches) {
                calendar.changeView('agendaWeek');
            }

            // change view to month when in desktop
            if (window.matchMedia('(min-width: 992px)').matches) {
                calendar.changeView('month');
            }

            // change view based in viewport width when resize is detected
            calendar.option('windowResize', function (view) {
                if (view.name === 'listWeek') {
                    if (window.matchMedia('(min-width: 992px)').matches) {
                        calendar.changeView('month');
                    } else {
                        calendar.changeView('listWeek');
                    }
                }
            });

        });

        function CheckJoinRoom(id) {
            $.ajax({
                type: "POST",
                url: "/Admin/ZoomMeeting/CheckJoinRoom",
                data: '{id:  ' + id + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    if (msg.rs == false) {
                        toast.create({
                            title: 'Thông báo!',
                            text: msg.m,
                            icon: 'notifications_active',
                            classBackground: 'noti-warning',
                            timeout: 2000
                        })
                    }
                    else {
                        console.log(msg.url);
                        window.open(msg.url, "_blank");
                    }
                },
                error: function (xmlhttprequest, textstatus, errorthrow) {
                    console.log("e: error");
                }
            });
        }
        $('#btn-add').click(function () {
            var fd = new FormData();
            fd.append('feedback', $('input[name=feedback]').val());
            fd.append('schedule', $('input[name=schedule]').val());
            fd.append('slStatus', $('select[name=slStatus]').val());
            fd.append('feedbackcontent', $('textarea[name=feedbackcontent]').val());
            console.log(fd);
            $.ajax({
                type: "POST",
                url: "/StudentCourse/AddFeedbackSchedule",
                data: fd,
                processData: false,
                contentType: false,
                success: function (doc) {
                    if (doc.rs) {
                        toast.create({
                            title: 'Thông báo!',
                            text: 'Thành công',
                            icon: 'notifications_active',
                            classBackground: 'noti-success',
                            timeout: 4000
                        })
                    } else {
                        toast.create({
                            title: 'Thông báo!',
                            text: 'Bạn đã phản hồi về buổi học này rồi!',
                            icon: 'warning',
                            classBackground: 'noti-warning',
                            timeout: 4000
                        })
                    }
                        $('#div-feedback').modal();
                },
                error: function (xmlhttprequest, textstatus, errorthrow) {
                    console.log(errorthrow);
                }
            });
        });
    </script>
}